{"remainingRequest":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weidil/Desktop/DSCI-554/frontend/project-app/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/src/views/Map.vue","mtime":1637220933530},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIgppbXBvcnQgKiBhcyB0b3BvanNvbiBmcm9tICd0b3BvanNvbicKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndXNfbWFwJywKICBkYXRhOiBmdW5jdGlvbiAoKSB7CgogICAgcmV0dXJuIHsKICAgICAgbWFwRGF0YTogbnVsbCwKICAgICAgZmxpZ2h0c0RhdGE6IG51bGwsCiAgICAgIHJhd0RhdGE6IG51bGwsCiAgICAgIGFpcnBvcnRfZ2VvOiBudWxsLAogICAgICBjdXJyX2FpcnBvcnQ6IG51bGwsCiAgICAgIGRhdGVWYWx1ZTogJzIwMjEtMDgtMDEnLAogICAgICBtaW46ICcyMDIxLTA4LTAxJywKICAgICAgbWF4OiAnMjAyMS0wOC0zMScKICAgIH0KICB9LCAKICBtZXRob2RzOiB7CiAgICBkcmF3UGF0aChzdGF0ZSkgewogICAgICB2YXIgc3RhdGVEYXRhID0gdGhpcy5mbGlnaHRzRGF0YS5maWx0ZXIoZCA9PiBkLk9SSUdJTl9TVEFURV9OTSA9PSBzdGF0ZSAmJiBkLkZMX0RBVEUgPT0gdGhpcy5kYXRlVmFsdWUpCiAgICAgIHZhciBsb2NhbF9haXJwb3J0ID0gc3RhdGVEYXRhWzBdLk9SSUdJTgogICAgICBpZiAodGhpcy5jdXJyX2FpcnBvcnQgPT0gbnVsbCl7CiAgICAgICAgdGhpcy5jdXJyX2FpcnBvcnQgPSBsb2NhbF9haXJwb3J0CiAgICAgICAgdmFyIGxpbmsgPSBbXQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RhdGVEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgZnJvbSA9IHN0YXRlRGF0YVtpXS5PUklHSU4KICAgICAgICAgIHZhciB0byA9IHN0YXRlRGF0YVtpXS5ERVNUCiAgICAgICAgICAvLyB2YXIgZnJvbV9jaXR5ID0gc3RhdGVEYXRhW2ldLk9SSUdJTl9DSVRZX05BTUUKICAgICAgICAgIC8vIHZhciB0b19jaXR5ID0gc3RhdGVEYXRhW2ldLkRFU1RfQ0lUWV9OQU1FCiAgICAgICAgICB2YXIgZGVsX3QgPSBzdGF0ZURhdGFbaV0uQVJSX0RFTEFZCiAgICAgICAgICB2YXIgY2FycmllciA9IHN0YXRlRGF0YVtpXS5DQVJSSUVSX0RFTEFZCiAgICAgICAgICB2YXIgd2VhdGhlciA9IHN0YXRlRGF0YVtpXS5XRUFUSEVSX0RFTEFZCiAgICAgICAgICB2YXIgbmFzID0gc3RhdGVEYXRhW2ldLk5BU19ERUxBWQogICAgICAgICAgdmFyIHNlYyA9IHN0YXRlRGF0YVtpXS5TRUNVUklUWV9ERUxBWQogICAgICAgICAgdmFyIGFpcmNyYWZ0ID0gc3RhdGVEYXRhW2ldLkxBVEVfQUlSQ1JBRlRfREVMQVkKICAgICAgICAgIHZhciBmcm9tX2xuZyA9IHRoaXMuYWlycG9ydF9nZW8uZmlsdGVyKGQgPT4gZC5sb2NhbF9jb2RlID09IGZyb20pWzBdLmxvbmdpdHVkZV9kZWcKICAgICAgICAgIHZhciBmcm9tX2xhdCA9IHRoaXMuYWlycG9ydF9nZW8uZmlsdGVyKGQgPT4gZC5sb2NhbF9jb2RlID09IGZyb20pWzBdLmxhdGl0dWRlX2RlZwogICAgICAgICAgdmFyIHRvX2xuZyA9IHRoaXMuYWlycG9ydF9nZW8uZmlsdGVyKGQgPT4gZC5sb2NhbF9jb2RlID09IHRvKVswXS5sb25naXR1ZGVfZGVnCiAgICAgICAgICB2YXIgdG9fbGF0ID0gdGhpcy5haXJwb3J0X2dlby5maWx0ZXIoZCA9PiBkLmxvY2FsX2NvZGUgPT0gdG8pWzBdLmxhdGl0dWRlX2RlZwogICAgICAgICAgbGluay5wdXNoKHsKICAgICAgICAgICAgdHlwZTogIkxpbmVTdHJpbmciLAogICAgICAgICAgICBjb29yZGluYXRlczogW1tmcm9tX2xuZywgZnJvbV9sYXRdLFt0b19sbmcsIHRvX2xhdF1dLAogICAgICAgICAgICBmcm9tOiBmcm9tLAogICAgICAgICAgICB0bzogdG8sCiAgICAgICAgICAgIGRlbF90OiBkZWxfdCwKICAgICAgICAgICAgY2FycmllcjogY2FycmllciwKICAgICAgICAgICAgd2VhdGhlcjogd2VhdGhlciwKICAgICAgICAgICAgbmFzOiBuYXMsCiAgICAgICAgICAgIHNlYzogc2VjLAogICAgICAgICAgICBhaXJjcmFmdDogYWlyY3JhZnQKCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICB2YXIgcHJvamVjdGlvbiA9IGQzLmdlb0FsYmVyc1VzYSgpLnNjYWxlKDEzMDApLnRyYW5zbGF0ZShbNDg3LjUsIDMwNV0pOwogICAgICAgIHZhciBwYXRoID0gZDMuZ2VvUGF0aCgpLnByb2plY3Rpb24ocHJvamVjdGlvbik7CiAgICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3VzX21hcCcpCiAgICAgICAgc3ZnLnNlbGVjdEFsbCgibXlQYXRoIikKICAgICAgICAgIC5kYXRhKGxpbmspCiAgICAgICAgICAuZW50ZXIoKQogICAgICAgICAgLmFwcGVuZCgicGF0aCIpCiAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsIGAke3RoaXMuY3Vycl9haXJwb3J0fWApCiAgICAgICAgICAgIC5hdHRyKCdkaXNwbGF5JywgJ3Zpc2libGUnKQogICAgICAgICAgICAuYXR0cigiZCIsIGZ1bmN0aW9uKGQpeyByZXR1cm4gcGF0aChkKX0pCiAgICAgICAgICAgIC5zdHlsZSgiZmlsbCIsICJub25lIikKICAgICAgICAgICAgLnN0eWxlKCJzdHJva2UiLCAib3JhbmdlIikKICAgICAgICAgICAgLnN0eWxlKCJzdHJva2Utd2lkdGgiLCAyKQogICAgICAgICAgICAub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBkMy5zZWxlY3QodGhpcykKICAgICAgICAgICAgICAuc3R5bGUoJ3N0cm9rZScsICdyZWQnKQogICAgICAgICAgICAgIC5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgOCkKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBkMy5zZWxlY3QodGhpcykKICAgICAgICAgICAgICAgIC5zdHlsZSgnc3Ryb2tlJywgJ29yYW5nZScpCiAgICAgICAgICAgICAgICAuc3R5bGUoJ3N0cm9rZS13aWR0aCcsIDIpCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5hcHBlbmQoJ3RpdGxlJykKICAgICAgICAgICAgLnRleHQoZCA9PiBgRnJvbTogJHtkLmZyb219IFxuVG86ICR7ZC50b30gXG5EZWxheWVkIFRpbWU6ICR7ZGVsX3R9IFxuQ2FycmllcjogJHtjYXJyaWVyfSBcbldlYXRoZXI6ICR7d2VhdGhlcn0gXG5OQVM6ICR7bmFzfSBcbiBTZWN1cml0eTogJHtzZWN9IFxuQWlyY3JhZnQ6ICR7YWlyY3JhZnR9YCkKICAgICAgICAgICAgCiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyX2FpcnBvcnQgPT0gbG9jYWxfYWlycG9ydCkgewogICAgICAgIGQzLnNlbGVjdEFsbChgLiR7dGhpcy5jdXJyX2FpcnBvcnR9YCkKICAgICAgICAgIC5hdHRyKCdkaXNwbGF5JywgJ25vbmUnKQogICAgICAgIHRoaXMuY3Vycl9haXJwb3J0ID0gbnVsbAogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCdjbGljayB0aGUgc3RhdGUgc2hvd24gZmlyc3QnKQogICAgICB9CiAgICAgIAogICAgfSwKICAgIGNyZWF0ZWQoKXt3aW5kb3cuZHJhd1BhdGggPXRoaXMuZHJhd1BhdGg7fSwKICAgIGJ1aWxkTWFwICgpIHsKICAgICAgLy8gdmFyIGRyYXdQYXRoID0gdGhpcy5kcmF3UGF0aCgpCiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoJyN1c19tYXAnKQogICAgICAgIC5hdHRyKCd2aWV3Qm94JywgWzAsIDAsIDk3NSwgNjEwXSkKICAgICAgdmFyIHBhdGggPSBkMy5nZW9QYXRoKCk7CiAgICAgIAoJCQkJc3ZnLmFwcGVuZCgnZycpCgkJCQkJLmF0dHIoJ2NsYXNzJywgJ3N0YXRlcycpCgkJCQkJLnNlbGVjdEFsbCgncGF0aCcpCgkJCQkJLmRhdGEodG9wb2pzb24uZmVhdHVyZSh0aGlzLm1hcERhdGEsIHRoaXMubWFwRGF0YS5vYmplY3RzLnN0YXRlcykuZmVhdHVyZXMpICAKCQkJCQkuZW50ZXIoKQoJCQkJCS5hcHBlbmQoJ3BhdGgnKQogICAgICAgICAgLmF0dHIoJ29uY2xpY2snLCBkID0+IChgZHJhd1BhdGgoJyR7ZC5wcm9wZXJ0aWVzLm5hbWV9JylgKSkKCQkJCQkuYXR0cignZCcsIHBhdGgpCiAgICAgICAgCgkJCQoJCQkJc3ZnLmFwcGVuZCgncGF0aCcpICAvL/CfjpIgZXhwbGFpbjoKCQkJCQkuYXR0cignY2xhc3MnLCAnc3RhdGUtYm9yZGVycycpCgkJCQkJLmF0dHIoJ2QnLCBwYXRoKHRvcG9qc29uLm1lc2godGhpcy5tYXBEYXRhLCB0aGlzLm1hcERhdGEub2JqZWN0cy5zdGF0ZXMsIChhLCBiKSA9PiBhICE9PSBiKSkpOyAKICAgIH0sCiAgICBidWlsZE1hcGJveCAoKSB7CiAgICAgIG1hcGJveGdsLmFjY2Vzc1Rva2VuID0gJ3BrLmV5SjFJam9pZDJ4dmRTSXNJbUVpT2lKamEzWTJjR0V3TW04eGJXdHNNbTV1Ym1OdGQydGxObkUwSW4wLld5N3dPVk41LU5KNlllOGt6Q1ZjQmcnOwogICAgICBjb25zdCBtYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHsKICAgICAgY29udGFpbmVyOiAnbWJmbScsIC8vIGNvbnRhaW5lciBJRAogICAgICBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvZGFyay12MTAnLCAvLyBzdHlsZSBVUkwKICAgICAgY2VudGVyOiBbLTExOC4yODYxNjY5LDM0LjAyMjEzMDVdLCAvLyBzdGFydGluZyBwb3NpdGlvbiBbbG5nLCBsYXRdCiAgICAgIHpvb206IDE1LjUgLy8gc3RhcnRpbmcgem9vbQogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUuaHRtbE1hcERhdGEpIHsKICAgICAgdmFyIHByb21pc2VzID0gW10KICAgICAgcHJvbWlzZXMucHVzaChkMy5qc29uKCdzdGF0ZXMtYWxiZXJzLTEwbS5qc29uJykpCiAgICAgIHByb21pc2VzLnB1c2goZDMuY3N2KCdmbGlnaHRzLmNzdicpKQogICAgICBwcm9taXNlcy5wdXNoKGQzLmNzdignYWlycG9ydF9nZW8uY3N2JykpCiAgICAgIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKHZhbHVlcyA9PiB7CiAgICAgICAgdGhpcy5yYXdEYXRhID0gdmFsdWVzCiAgICAgICAgdGhpcy5tYXBEYXRhID0gdmFsdWVzWzBdCiAgICAgICAgdGhpcy5mbGlnaHRzRGF0YSA9IHZhbHVlc1sxXQogICAgICAgIHRoaXMuYWlycG9ydF9nZW8gPSB2YWx1ZXNbMl0KICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2h0bWxNYXBEYXRhJywgdGhpcy5yYXdEYXRhKTsKICAgICAgICB0aGlzLmNyZWF0ZWQoKTsKICAgICAgICB0aGlzLmJ1aWxkTWFwKCk7CiAgICAgIH0pCiAgICAgIC8vIGQzLmpzb24oJ3N0YXRlcy1hbGJlcnMtMTBtLmpzb24nKS50aGVuKGRhdGEgPT4gewogICAgICAvLyAgIHRoaXMubWFwRGF0YSA9IGRhdGE7CiAgICAgIC8vICAgLy8gY29uc29sZS5sb2coJ2NoYXJ0RGF0YSBzZXQgZnJvbSBmaWxlJyk7CiAgICAgIC8vICAgLy8gY29uc29sZS5sb2coJ2NoYXJ0RGF0YSBjb250YWlucycsIHRoaXMubWFwRGF0YSk7CiAgICAgIC8vICAgdGhpcy4kc3RvcmUuY29tbWl0KCdodG1sTWFwRGF0YScsIHRoaXMubWFwRGF0YSk7CgogICAgICAvLyAgIHRoaXMuYnVpbGRNYXAoKTsKICAgICAgLy8gICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmF3RGF0YSA9IHRoaXMuJHN0b3JlLnN0YXRlLmh0bWxNYXBEYXRhOwogICAgICB0aGlzLm1hcERhdGEgPSB0aGlzLnJhd0RhdGFbMF0KICAgICAgdGhpcy5mbGlnaHRzRGF0YSA9IHRoaXMucmF3RGF0YVsxXQogICAgICB0aGlzLmFpcnBvcnRfZ2VvID0gdGhpcy5yYXdEYXRhWzJdCiAgICAgIC8vIGNvbnNvbGUubG9nKCdjaGFydERhdGEgc2V0IGZyb20gc3RvcmUnKTsKICAgICAgLy8gY29uc29sZS5sb2coJ2NoYXJ0RGF0YSBjb250YWlucycsIHRoaXMubWFwRGF0YS5sZW5ndGgsICdyb3dzJyk7CiAgICAgIHRoaXMuY3JlYXRlZCgpOwogICAgICB0aGlzLmJ1aWxkTWFwKCk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"d3_map\">\n      <h1>This is an Map page</h1>\n      <b-tabs content-class=\"mt-3\">\n        <b-tab title=\"D3.map\" active>\n          <div>\n            <label for=\"datepicker\">Choose a date</label>\n            <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n          </div>\n          <svg id='us_map'></svg>\n        </b-tab>\n        <b-tab title=\"Mapbox.map\">\n          <p>I'm the second tab</p>\n          <div id='mbfm' class=\"mapbox_container\">\n            <div class='map-overlay' id='features'><h2>Building Capacity</h2><div id='pd'><p>Hover over a building!</p></div></div>\n            <!-- <div class='map-overlay' id='legend'></div> -->\n          </div>\n        </b-tab>\n        <!-- <b-tab title=\"Disabled\" disabled><p>I'm a disabled tab!</p></b-tab> -->\n      </b-tabs>\n      <!-- <div>\n        <label for=\"datepicker\">Choose a date</label>\n        <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n        <p>Value: '{{ dateValue }}'</p>\n      </div>\n      <svg id='us_map'></svg> -->\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\n\nexport default {\n  name: 'us_map',\n  data: function () {\n\n    return {\n      mapData: null,\n      flightsData: null,\n      rawData: null,\n      airport_geo: null,\n      curr_airport: null,\n      dateValue: '2021-08-01',\n      min: '2021-08-01',\n      max: '2021-08-31'\n    }\n  }, \n  methods: {\n    drawPath(state) {\n      var stateData = this.flightsData.filter(d => d.ORIGIN_STATE_NM == state && d.FL_DATE == this.dateValue)\n      var local_airport = stateData[0].ORIGIN\n      if (this.curr_airport == null){\n        this.curr_airport = local_airport\n        var link = []\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          // var from_city = stateData[i].ORIGIN_CITY_NAME\n          // var to_city = stateData[i].DEST_CITY_NAME\n          var del_t = stateData[i].ARR_DELAY\n          var carrier = stateData[i].CARRIER_DELAY\n          var weather = stateData[i].WEATHER_DELAY\n          var nas = stateData[i].NAS_DELAY\n          var sec = stateData[i].SECURITY_DELAY\n          var aircraft = stateData[i].LATE_AIRCRAFT_DELAY\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          link.push({\n            type: \"LineString\",\n            coordinates: [[from_lng, from_lat],[to_lng, to_lat]],\n            from: from,\n            to: to,\n            del_t: del_t,\n            carrier: carrier,\n            weather: weather,\n            nas: nas,\n            sec: sec,\n            aircraft: aircraft\n\n          })\n        }\n        var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n        var path = d3.geoPath().projection(projection);\n        var svg = d3.select('#us_map')\n        svg.selectAll(\"myPath\")\n          .data(link)\n          .enter()\n          .append(\"path\")\n            .attr('class', `${this.curr_airport}`)\n            .attr('display', 'visible')\n            .attr(\"d\", function(d){ return path(d)})\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2)\n            .on('mouseover', function () {\n              d3.select(this)\n              .style('stroke', 'red')\n              .style('stroke-width', 8)\n            })\n            .on('mouseout', function () {\n              d3.select(this)\n                .style('stroke', 'orange')\n                .style('stroke-width', 2)\n            })\n            .append('title')\n            .text(d => `From: ${d.from} \\nTo: ${d.to} \\nDelayed Time: ${del_t} \\nCarrier: ${carrier} \\nWeather: ${weather} \\nNAS: ${nas} \\n Security: ${sec} \\nAircraft: ${aircraft}`)\n            \n      } else if (this.curr_airport == local_airport) {\n        d3.selectAll(`.${this.curr_airport}`)\n          .attr('display', 'none')\n        this.curr_airport = null\n      } else {\n        alert('click the state shown first')\n      }\n      \n    },\n    created(){window.drawPath =this.drawPath;},\n    buildMap () {\n      // var drawPath = this.drawPath()\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      var path = d3.geoPath();\n      \n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n          .attr('onclick', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\t\t.attr('d', path)\n        \n\t\t\t\n\t\t\t\tsvg.append('path')  //🎒 explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n    },\n    buildMapbox () {\n      mapboxgl.accessToken = 'pk.eyJ1Ijoid2xvdSIsImEiOiJja3Y2cGEwMm8xbWtsMm5ubmNtd2tlNnE0In0.Wy7wOVN5-NJ6Ye8kzCVcBg';\n      const map = new mapboxgl.Map({\n      container: 'mbfm', // container ID\n      style: 'mapbox://styles/mapbox/dark-v10', // style URL\n      center: [-118.2861669,34.0221305], // starting position [lng, lat]\n      zoom: 15.5 // starting zoom\n      });\n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.json('states-albers-10m.json'))\n      promises.push(d3.csv('flights.csv'))\n      promises.push(d3.csv('airport_geo.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.mapData = values[0]\n        this.flightsData = values[1]\n        this.airport_geo = values[2]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.created();\n        this.buildMap();\n      })\n      // d3.json('states-albers-10m.json').then(data => {\n      //   this.mapData = data;\n      //   // console.log('chartData set from file');\n      //   // console.log('chartData contains', this.mapData);\n      //   this.$store.commit('htmlMapData', this.mapData);\n\n      //   this.buildMap();\n      //   });\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.mapData = this.rawData[0]\n      this.flightsData = this.rawData[1]\n      this.airport_geo = this.rawData[2]\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.created();\n      this.buildMap();\n    }\n  }\n}\n</script>\n\n<style>\n.states {\n  fill: #ccc;\n}\n\t\t\n.singlePath{\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke-width: 4;\n}\n.singlePath :hover {\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke: red;\n  stroke-width: 4;\n}\n\n\n\n.state-borders {\n  fill: none;\n  stroke: white;\n  /* stroke-width: 0.5px; */\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n</style>"]}]}