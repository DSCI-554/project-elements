{"remainingRequest":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weidil/Desktop/DSCI-554/frontend/project-app/src/views/Map.vue?vue&type=style&index=0&id=26bca5dc&scoped=true&lang=css&","dependencies":[{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/src/views/Map.vue","mtime":1636969806724},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnN0YXRlcyB7CiAgZmlsbDogd2hpdGVzbW9rZTsKfQoJCQouc3RhdGVzIDpob3ZlciB7CiAgZmlsbDogcmVkOwp9Cgouc3RhdGUtYm9yZGVycyB7CiAgZmlsbDogbm9uZTsKICBzdHJva2U6IGJsYWNrOwogIHN0cm9rZS13aWR0aDogMC41cHg7CiAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDsKICBzdHJva2UtbGluZWNhcDogcm91bmQ7CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7Cn0K"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"about\">\n    <h1>This is an Map page</h1>\n    <svg id='us_map' width='975' height='610'></svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\n\nexport default {\n  name: 'us_map',\n  data: function () {\n    return {\n      mapData: null\n    }\n  }, \n  methods: {\n    buildMap () {\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      var path = d3.geoPath();\n\n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n\t\t\t\t\t.attr('d', path);\n\t\t\t\n\t\t\t\tsvg.append('path')  //ðŸŽ’ explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      d3.json('us-10m.v1.json').then(data => {\n        this.mapData = data;\n        // console.log('chartData set from file');\n        // console.log('chartData contains', this.mapData);\n        this.$store.commit('htmlMapData', this.mapData);\n\n        this.buildMap();\n        });\n    } else {\n      this.mapData = this.$store.state.htmlMapData;\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.buildMap();\n    }\n  }\n}\n</script>\n<style scoped>\n.states {\n  fill: whitesmoke;\n}\n\t\t\n.states :hover {\n  fill: red;\n}\n\n.state-borders {\n  fill: none;\n  stroke: black;\n  stroke-width: 0.5px;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n</style>"]}]}