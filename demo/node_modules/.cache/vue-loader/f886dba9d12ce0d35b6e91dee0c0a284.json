{"remainingRequest":"/Users/aishwaryak/project-elements/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aishwaryak/project-elements/demo/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aishwaryak/project-elements/demo/src/views/Map.vue","mtime":1637200614708},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIgppbXBvcnQgKiBhcyB0b3BvanNvbiBmcm9tICd0b3BvanNvbicKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndXNfbWFwJywKICBkYXRhOiBmdW5jdGlvbiAoKSB7CgogICAgcmV0dXJuIHsKICAgICAgbWFwRGF0YTogbnVsbCwKICAgICAgZmxpZ2h0c0RhdGE6IG51bGwsCiAgICAgIHJhd0RhdGE6IG51bGwsCiAgICAgIGFpcnBvcnRfZ2VvOiBudWxsLAogICAgICBjdXJyX2FpcnBvcnQ6IG51bGwsCiAgICAgIGRhdGVWYWx1ZTogJzIwMjEtMDgtMDEnLAogICAgICBtaW46ICcyMDIxLTA4LTAxJywKICAgICAgbWF4OiAnMjAyMS0wOC0zMScKICAgIH0KICB9LCAKICBtZXRob2RzOiB7CiAgICBkcmF3UGF0aChzdGF0ZSkgewogICAgICBjb25zb2xlLmxvZyhzdGF0ZSkKICAgICAgY29uc29sZS5sb2codGhpcy5jdXJyX3N0YXRlKQogICAgICB2YXIgc3RhdGVEYXRhID0gdGhpcy5mbGlnaHRzRGF0YS5maWx0ZXIoZCA9PiBkLk9SSUdJTl9TVEFURV9OTSA9PSBzdGF0ZSAmJiBkLkZMX0RBVEUgPT0gdGhpcy5kYXRlVmFsdWUpCiAgICAgIHZhciBsb2NhbF9haXJwb3J0ID0gc3RhdGVEYXRhWzBdLk9SSUdJTgogICAgICBpZiAodGhpcy5jdXJyX2FpcnBvcnQgPT0gbnVsbCl7CiAgICAgICAgdGhpcy5jdXJyX2FpcnBvcnQgPSBsb2NhbF9haXJwb3J0CiAgICAgICAgdmFyIGxpbmsgPSBbXQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RhdGVEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgZnJvbSA9IHN0YXRlRGF0YVtpXS5PUklHSU4KICAgICAgICAgIHZhciB0byA9IHN0YXRlRGF0YVtpXS5ERVNUCiAgICAgICAgICB2YXIgZnJvbV9sbmcgPSB0aGlzLmFpcnBvcnRfZ2VvLmZpbHRlcihkID0+IGQubG9jYWxfY29kZSA9PSBmcm9tKVswXS5sb25naXR1ZGVfZGVnCiAgICAgICAgICB2YXIgZnJvbV9sYXQgPSB0aGlzLmFpcnBvcnRfZ2VvLmZpbHRlcihkID0+IGQubG9jYWxfY29kZSA9PSBmcm9tKVswXS5sYXRpdHVkZV9kZWcKICAgICAgICAgIHZhciB0b19sbmcgPSB0aGlzLmFpcnBvcnRfZ2VvLmZpbHRlcihkID0+IGQubG9jYWxfY29kZSA9PSB0bylbMF0ubG9uZ2l0dWRlX2RlZwogICAgICAgICAgdmFyIHRvX2xhdCA9IHRoaXMuYWlycG9ydF9nZW8uZmlsdGVyKGQgPT4gZC5sb2NhbF9jb2RlID09IHRvKVswXS5sYXRpdHVkZV9kZWcKICAgICAgICAgIGxpbmsucHVzaCh7CiAgICAgICAgICAgIHR5cGU6ICJMaW5lU3RyaW5nIiwKICAgICAgICAgICAgY29vcmRpbmF0ZXM6IFtbZnJvbV9sbmcsIGZyb21fbGF0XSxbdG9fbG5nLCB0b19sYXRdXQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgdmFyIHByb2plY3Rpb24gPSBkMy5nZW9BbGJlcnNVc2EoKS5zY2FsZSgxMzAwKS50cmFuc2xhdGUoWzQ4Ny41LCAzMDVdKTsKICAgICAgICB2YXIgcGF0aCA9IGQzLmdlb1BhdGgoKS5wcm9qZWN0aW9uKHByb2plY3Rpb24pOwogICAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoJyN1c19tYXAnKQogICAgICAgIHN2Zy5zZWxlY3RBbGwoIm15UGF0aCIpCiAgICAgICAgICAuZGF0YShsaW5rKQogICAgICAgICAgLmVudGVyKCkKICAgICAgICAgIC5hcHBlbmQoInBhdGgiKQogICAgICAgICAgICAuYXR0cignY2xhc3MnLCBgJHt0aGlzLmN1cnJfYWlycG9ydH1gKQogICAgICAgICAgICAuYXR0cignZGlzcGxheScsICd2aXNpYmxlJykKICAgICAgICAgICAgLmF0dHIoImQiLCBmdW5jdGlvbihkKXsgcmV0dXJuIHBhdGgoZCl9KQogICAgICAgICAgICAuc3R5bGUoImZpbGwiLCAibm9uZSIpCiAgICAgICAgICAgIC5zdHlsZSgic3Ryb2tlIiwgIm9yYW5nZSIpCiAgICAgICAgICAgIC5zdHlsZSgic3Ryb2tlLXdpZHRoIiwgMikKICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJfYWlycG9ydCA9PSBsb2NhbF9haXJwb3J0KSB7CiAgICAgICAgZDMuc2VsZWN0QWxsKGAuJHt0aGlzLmN1cnJfYWlycG9ydH1gKQogICAgICAgICAgLmF0dHIoJ2Rpc3BsYXknLCAnbm9uZScpCiAgICAgICAgdGhpcy5jdXJyX2FpcnBvcnQgPSBudWxsCiAgICAgIH0gZWxzZSB7CiAgICAgICAgYWxlcnQoJ2NsaWNrIHRoZSBzdGF0ZSBzaG93biBmaXJzdCcpCiAgICAgIH0KICAgICAgCiAgICB9LAogICAgY3JlYXRlZCgpe3dpbmRvdy5kcmF3UGF0aCA9dGhpcy5kcmF3UGF0aDt9LAogICAgYnVpbGRNYXAgKCkgewogICAgICAvLyB2YXIgZHJhd1BhdGggPSB0aGlzLmRyYXdQYXRoKCkKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3VzX21hcCcpCiAgICAgICAgLmF0dHIoJ3ZpZXdCb3gnLCBbMCwgMCwgOTc1LCA2MTBdKQogICAgICAvLyB2YXIgcHJvamVjdGlvbiA9IGQzLmdlb0FsYmVyc1VzYSgpLnNjYWxlKDEzMDApLnRyYW5zbGF0ZShbNDg3LjUsIDMwNV0pOwogICAgICB2YXIgcGF0aCA9IGQzLmdlb1BhdGgoKTsKICAgICAgCgkJCQlzdmcuYXBwZW5kKCdnJykKCQkJCQkuYXR0cignY2xhc3MnLCAnc3RhdGVzJykKCQkJCQkuc2VsZWN0QWxsKCdwYXRoJykKCQkJCQkuZGF0YSh0b3BvanNvbi5mZWF0dXJlKHRoaXMubWFwRGF0YSwgdGhpcy5tYXBEYXRhLm9iamVjdHMuc3RhdGVzKS5mZWF0dXJlcykgIAoJCQkJCS5lbnRlcigpCgkJCQkJLmFwcGVuZCgncGF0aCcpCiAgICAgICAgICAuYXR0cignb25jbGljaycsIGQgPT4gKGBkcmF3UGF0aCgnJHtkLnByb3BlcnRpZXMubmFtZX0nKWApKQoJCQkJCS5hdHRyKCdkJywgcGF0aCkKICAgICAgICAgIAogICAgICAgICAgLy8gLmF0dHIoJ29uY2xpY2snLCBkID0+IGBhbGVydCgnJHtkLnByb3BlcnRpZXMubmFtZX0nKWApCiAgICAgICAgICAvLyAub24oJ2NsaWNrJywgZCA9PiAoYGRyYXdQYXRoKCcke2QucHJvcGVydGllcy5uYW1lfScpYCkpCgkJCQoJCQkJc3ZnLmFwcGVuZCgncGF0aCcpICAvL/CfjpIgZXhwbGFpbjoKCQkJCQkuYXR0cignY2xhc3MnLCAnc3RhdGUtYm9yZGVycycpCgkJCQkJLmF0dHIoJ2QnLCBwYXRoKHRvcG9qc29uLm1lc2godGhpcy5tYXBEYXRhLCB0aGlzLm1hcERhdGEub2JqZWN0cy5zdGF0ZXMsIChhLCBiKSA9PiBhICE9PSBiKSkpOyAKICAgICAgICAvLyBzdmcuc2VsZWN0QWxsKCJjaXJjbGUiKQogICAgICAgIC8vICAgLmRhdGEoYWlycG9ydHMpLmVudGVyKCkKICAgICAgICAvLyAgIC5hcHBlbmQoImNpcmNsZSIpCiAgICAgICAgLy8gICAuYXR0cignY2xhc3MnLCAnYWlycG9ydCcpCiAgICAgICAgLy8gICAuYXR0cigiY3giLCBkID0+IHsgcmV0dXJuIHByb2plY3Rpb24oZClbMF19KQogICAgICAgIC8vICAgLmF0dHIoImN5IiwgZCA9PiB7IHJldHVybiBwcm9qZWN0aW9uKGQpWzFdfSkKICAgICAgICAvLyAgIC5hdHRyKCJyIiwgIjRweCIpCiAgICAgICAgLy8gICAuYXR0cigiZmlsbCIsICJyZWQiKQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgaWYgKCF0aGlzLiRzdG9yZS5zdGF0ZS5odG1sTWFwRGF0YSkgewogICAgICB2YXIgcHJvbWlzZXMgPSBbXQogICAgICBwcm9taXNlcy5wdXNoKGQzLmpzb24oJ3N0YXRlcy1hbGJlcnMtMTBtLmpzb24nKSkKICAgICAgcHJvbWlzZXMucHVzaChkMy5jc3YoJ2ZsaWdodHMuY3N2JykpCiAgICAgIHByb21pc2VzLnB1c2goZDMuY3N2KCdhaXJwb3J0X2dlby5jc3YnKSkKICAgICAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4odmFsdWVzID0+IHsKICAgICAgICB0aGlzLnJhd0RhdGEgPSB2YWx1ZXMKICAgICAgICB0aGlzLm1hcERhdGEgPSB2YWx1ZXNbMF0KICAgICAgICB0aGlzLmZsaWdodHNEYXRhID0gdmFsdWVzWzFdCiAgICAgICAgdGhpcy5haXJwb3J0X2dlbyA9IHZhbHVlc1syXQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaHRtbE1hcERhdGEnLCB0aGlzLnJhd0RhdGEpOwogICAgICAgIHRoaXMuY3JlYXRlZCgpOwogICAgICAgIHRoaXMuYnVpbGRNYXAoKTsKICAgICAgfSkKICAgICAgLy8gZDMuanNvbignc3RhdGVzLWFsYmVycy0xMG0uanNvbicpLnRoZW4oZGF0YSA9PiB7CiAgICAgIC8vICAgdGhpcy5tYXBEYXRhID0gZGF0YTsKICAgICAgLy8gICAvLyBjb25zb2xlLmxvZygnY2hhcnREYXRhIHNldCBmcm9tIGZpbGUnKTsKICAgICAgLy8gICAvLyBjb25zb2xlLmxvZygnY2hhcnREYXRhIGNvbnRhaW5zJywgdGhpcy5tYXBEYXRhKTsKICAgICAgLy8gICB0aGlzLiRzdG9yZS5jb21taXQoJ2h0bWxNYXBEYXRhJywgdGhpcy5tYXBEYXRhKTsKCiAgICAgIC8vICAgdGhpcy5idWlsZE1hcCgpOwogICAgICAvLyAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5yYXdEYXRhID0gdGhpcy4kc3RvcmUuc3RhdGUuaHRtbE1hcERhdGE7CiAgICAgIHRoaXMubWFwRGF0YSA9IHRoaXMucmF3RGF0YVswXQogICAgICB0aGlzLmZsaWdodHNEYXRhID0gdGhpcy5yYXdEYXRhWzFdCiAgICAgIHRoaXMuYWlycG9ydF9nZW8gPSB0aGlzLnJhd0RhdGFbMl0KICAgICAgLy8gY29uc29sZS5sb2coJ2NoYXJ0RGF0YSBzZXQgZnJvbSBzdG9yZScpOwogICAgICAvLyBjb25zb2xlLmxvZygnY2hhcnREYXRhIGNvbnRhaW5zJywgdGhpcy5tYXBEYXRhLmxlbmd0aCwgJ3Jvd3MnKTsKICAgICAgdGhpcy5jcmVhdGVkKCk7CiAgICAgIHRoaXMuYnVpbGRNYXAoKTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"Map.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"d3_map\">\n      <h1>This is an Map page</h1>\n      <div>\n        <label for=\"datepicker\">Choose a date</label>\n        <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n        <p>Value: '{{ dateValue }}'</p>\n      </div>\n      <svg id='us_map'></svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\n\nexport default {\n  name: 'us_map',\n  data: function () {\n\n    return {\n      mapData: null,\n      flightsData: null,\n      rawData: null,\n      airport_geo: null,\n      curr_airport: null,\n      dateValue: '2021-08-01',\n      min: '2021-08-01',\n      max: '2021-08-31'\n    }\n  }, \n  methods: {\n    drawPath(state) {\n      console.log(state)\n      console.log(this.curr_state)\n      var stateData = this.flightsData.filter(d => d.ORIGIN_STATE_NM == state && d.FL_DATE == this.dateValue)\n      var local_airport = stateData[0].ORIGIN\n      if (this.curr_airport == null){\n        this.curr_airport = local_airport\n        var link = []\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          link.push({\n            type: \"LineString\",\n            coordinates: [[from_lng, from_lat],[to_lng, to_lat]]\n          })\n        }\n        var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n        var path = d3.geoPath().projection(projection);\n        var svg = d3.select('#us_map')\n        svg.selectAll(\"myPath\")\n          .data(link)\n          .enter()\n          .append(\"path\")\n            .attr('class', `${this.curr_airport}`)\n            .attr('display', 'visible')\n            .attr(\"d\", function(d){ return path(d)})\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2)\n      } else if (this.curr_airport == local_airport) {\n        d3.selectAll(`.${this.curr_airport}`)\n          .attr('display', 'none')\n        this.curr_airport = null\n      } else {\n        alert('click the state shown first')\n      }\n      \n    },\n    created(){window.drawPath =this.drawPath;},\n    buildMap () {\n      // var drawPath = this.drawPath()\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      // var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n      var path = d3.geoPath();\n      \n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n          .attr('onclick', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\t\t.attr('d', path)\n          \n          // .attr('onclick', d => `alert('${d.properties.name}')`)\n          // .on('click', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\n\t\t\t\tsvg.append('path')  //🎒 explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n        // svg.selectAll(\"circle\")\n        //   .data(airports).enter()\n        //   .append(\"circle\")\n        //   .attr('class', 'airport')\n        //   .attr(\"cx\", d => { return projection(d)[0]})\n        //   .attr(\"cy\", d => { return projection(d)[1]})\n        //   .attr(\"r\", \"4px\")\n        //   .attr(\"fill\", \"red\")\n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.json('states-albers-10m.json'))\n      promises.push(d3.csv('flights.csv'))\n      promises.push(d3.csv('airport_geo.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.mapData = values[0]\n        this.flightsData = values[1]\n        this.airport_geo = values[2]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.created();\n        this.buildMap();\n      })\n      // d3.json('states-albers-10m.json').then(data => {\n      //   this.mapData = data;\n      //   // console.log('chartData set from file');\n      //   // console.log('chartData contains', this.mapData);\n      //   this.$store.commit('htmlMapData', this.mapData);\n\n      //   this.buildMap();\n      //   });\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.mapData = this.rawData[0]\n      this.flightsData = this.rawData[1]\n      this.airport_geo = this.rawData[2]\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.created();\n      this.buildMap();\n    }\n  }\n}\n</script>\n\n<style>\n.states {\n  fill: #ccc;\n}\n\t\t\n.airport :hover {\n  fill:black;\n}\n\n.state-borders {\n  fill: none;\n  stroke: white;\n  /* stroke-width: 0.5px; */\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n</style>"]}]}