{"remainingRequest":"/Users/weidil/Desktop/DSCI-554/project-elements/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weidil/Desktop/DSCI-554/project-elements/demo/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weidil/Desktop/DSCI-554/project-elements/demo/src/views/Map.vue","mtime":1637295078179},{"path":"/Users/weidil/Desktop/DSCI-554/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/project-elements/demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weidil/Desktop/DSCI-554/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/project-elements/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Map.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"d3_map\">\n      <h1>This is an Map page</h1>\n      <b-tabs content-class=\"mt-3\">\n        <b-tab title=\"D3.map\" active>\n          <div>\n            <label for=\"datepicker\">Choose a date</label>\n            <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n          </div>\n          <svg id='us_map'></svg>\n        </b-tab>\n        <b-tab title=\"Mapbox.map\">\n          <p>I'm the second tab</p>\n          <b-row>\n            <b-col>\n              <b-container>\n                <label for=\"datepicker1\">Choose a date</label>\n                <b-form-datepicker id=\"datepicker1\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n              </b-container>\n            </b-col>\n            <b-col>\n              <b-container>\n                <label for=\"aiportpicker\" >Choose Departure Airport</label>\n                <b-form-select id = \"airportpicker\" v-model=\"selected\" :options=\"options\" size='lg'></b-form-select>\n              </b-container>\n            </b-col>\n          </b-row>\n          <!-- <div id='mbfm' class=\"mapbox_container\"> -->\n            <!-- <div class='map-overlay' id='features'><h2>Building Capacity</h2><div id='pd'><p>Hover over a building!</p></div></div> -->\n            <!-- <div class='map-overlay' id='legend'></div> -->\n          <!-- </div> -->\n          <b-container id='mbfm' class=\"mapbox_container\">\n            <!-- Content here -->\n          </b-container>\n        </b-tab>\n      </b-tabs>\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\nimport Mapbox from \"mapbox-gl\";\nimport * as turf from \"@turf/turf\";\n// import { MglMap } from \"vue-mapbox\";\n\nexport default {\n  name: 'us_map',\n  data: function () {\n\n    return {\n      mapData: null,\n      flightsData: null,\n      rawData: null,\n      airport_geo: null,\n      curr_airport: null,\n      dateValue: '2021-08-01',\n      min: '2021-08-01',\n      max: '2021-08-31',\n      selected: null,\n      options: [\n        { value: null,text: 'Please select an airport'},\n        'ABQ','ANC','ATL','BDL','BHM','BNA','BOI','BOS','BTV','BWI','BZN','CHS','CLE','CLT','CRW','CVG','DCA','DEN','DFW','DSM','DTW',\n        'EWR','FAR','FSD','GUM','HNL','ICT','ILG','IND','JAC','JAN','JFK','LAS','LAX','LIT','MCO','MHT','MKE','MSP','MSY','OKC','OMA',\n        'ORD','PDX','PHL','PHX','PVD','PWM','SEA','SJU','SLC','STL','STT'],\n      routes: {\n        'type': 'FeatureCollection',\n        'features': []\n      },\n      map: null\n    }\n  }, \n  watch: {\n    selected() {\n      if (this.selected != null) {\n        this.updateRoute()\n      }\n    }\n  },\n  methods: {\n    drawPath(state) {\n      var stateData = this.flightsData.filter(d => d.ORIGIN_STATE_NM == state && d.FL_DATE == this.dateValue)\n      var local_airport = stateData[0].ORIGIN\n      if (this.curr_airport == null){\n        this.curr_airport = local_airport\n        var link = []\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          // var from_city = stateData[i].ORIGIN_CITY_NAME\n          // var to_city = stateData[i].DEST_CITY_NAME\n          var del_t = stateData[i].ARR_DELAY\n          var carrier = stateData[i].CARRIER_DELAY\n          var weather = stateData[i].WEATHER_DELAY\n          var nas = stateData[i].NAS_DELAY\n          var sec = stateData[i].SECURITY_DELAY\n          var aircraft = stateData[i].LATE_AIRCRAFT_DELAY\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          link.push({\n            type: \"LineString\",\n            coordinates: [[from_lng, from_lat],[to_lng, to_lat]],\n            from: from,\n            to: to,\n            del_t: del_t,\n            carrier: carrier,\n            weather: weather,\n            nas: nas,\n            sec: sec,\n            aircraft: aircraft\n\n          })\n        }\n        var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n        var path = d3.geoPath().projection(projection);\n        var svg = d3.select('#us_map')\n        svg.selectAll(\"myPath\")\n          .data(link)\n          .enter()\n          .append(\"path\")\n            .attr('class', `${this.curr_airport}`)\n            .attr('display', 'visible')\n            .attr(\"d\", function(d){ return path(d)})\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2)\n            .on('mouseover', function () {\n              d3.select(this)\n              .style('stroke', 'red')\n              .style('stroke-width', 8)\n            })\n            .on('mouseout', function () {\n              d3.select(this)\n                .style('stroke', 'orange')\n                .style('stroke-width', 2)\n            })\n            .append('title')\n            .text(d => `From: ${d.from} \\nTo: ${d.to} \\nDelayed Time: ${del_t} \\nCarrier: ${carrier} \\nWeather: ${weather} \\nNAS: ${nas} \\n Security: ${sec} \\nAircraft: ${aircraft}`)\n            \n      } else if (this.curr_airport == local_airport) {\n        d3.selectAll(`.${this.curr_airport}`)\n          .attr('display', 'none')\n        this.curr_airport = null\n      } else {\n        alert('click the state shown first')\n      }\n      \n    },\n    created(){window.drawPath =this.drawPath;},\n    buildMap () {\n      // var drawPath = this.drawPath()\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      var path = d3.geoPath();\n      \n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n          .attr('onclick', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\t\t.attr('d', path)\n        \n\t\t\t\n\t\t\t\tsvg.append('path')  //🎒 explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n    },\n    buildMapbox () {\n      Mapbox.accessToken = 'pk.eyJ1Ijoid2xvdSIsImEiOiJja3Y2cGEwMm8xbWtsMm5ubmNtd2tlNnE0In0.Wy7wOVN5-NJ6Ye8kzCVcBg';\n      const map = new Mapbox.Map({\n        container: 'mbfm', // container ID\n        style: 'mapbox://styles/mapbox/dark-v10', // style URL\n        center: [-98.583333,39.833333], // starting position [lng, lat]\n        zoom: 3.5 // starting zoom\n      });\n\n      const route = {\n        'type': 'FeatureCollection',\n        'features': []\n      }\n      map.on('load', function () { \n        map.resize()\n        // map.resize()\n        map.addSource(`route`, {\n          'type': 'geojson',\n          'data': route\n        })\n        map.addLayer({\n          'id': `route`,\n          'source': `route`,\n          'type': 'line',\n          'paint': {\n            'line-width': 2,\n            'line-color': '#007cbf'\n          }\n        })\n      })\n      this.map = map\n    },\n    updateRoute () {\n      this.routes = {\n        'type': 'FeatureCollection',\n        'features': []\n        }\n      if (this.selected != null) {\n        var stateData = this.flightsData.filter(d => d.ORIGIN == this.selected && d.FL_DATE == this.dateValue)\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          // var del_t = stateData[i].ARR_DELAY\n          // var carrier = stateData[i].CARRIER_DELAY\n          // var weather = stateData[i].WEATHER_DELAY\n          // var nas = stateData[i].NAS_DELAY\n          // var sec = stateData[i].SECURITY_DELAY\n          // var aircraft = stateData[i].LATE_AIRCRAFT_DELAY\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          // const destination = [-77.032, 38.913];\n\n          // A simple line from origin to destination.\n          var greatCircle = turf.greatCircle([from_lng, from_lat],[to_lng, to_lat], {properties: {name: 'CNM'}});\n          this.routes.features.push(greatCircle)\n          \n        }\n      }\n      this.map.getSource('route').setData(this.routes);\n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.json('states-albers-10m.json'))\n      promises.push(d3.csv('flights.csv'))\n      promises.push(d3.csv('airport_geo.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.mapData = values[0]\n        this.flightsData = values[1]\n        this.airport_geo = values[2]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.created();\n        this.buildMap();\n        this.buildMapbox()\n      })\n      // d3.json('states-albers-10m.json').then(data => {\n      //   this.mapData = data;\n      //   // console.log('chartData set from file');\n      //   // console.log('chartData contains', this.mapData);\n      //   this.$store.commit('htmlMapData', this.mapData);\n\n      //   this.buildMap();\n      //   });\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.mapData = this.rawData[0]\n      this.flightsData = this.rawData[1]\n      this.airport_geo = this.rawData[2]\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.created();\n      this.buildMap();\n      this.buildMapbox()\n    }\n  }\n}\n</script>\n\n<style>\n.states {\n  fill: #ccc;\n}\n\t\t\n.singlePath{\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke-width: 4;\n}\n.singlePath :hover {\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke: red;\n  stroke-width: 4;\n}\n\n\n\n.state-borders {\n  fill: none;\n  stroke: white;\n  /* stroke-width: 0.5px; */\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n.mapbox_container {\n    position: relative;\n    height: 610px !important;\n    width: 975px !important;\n    display: inline-block;\n    z-index: 1;\n}\n\n#airportpicker{\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n</style>"]}]}