{"remainingRequest":"/Users/aishwaryak/project-elements/demo/node_modules/babel-loader/lib/index.js!/Users/aishwaryak/project-elements/demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aishwaryak/project-elements/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aishwaryak/project-elements/demo/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aishwaryak/project-elements/demo/src/views/Map.vue","mtime":1637200614708},{"path":"/Users/aishwaryak/project-elements/demo/babel.config.js","mtime":1637200614556},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aishwaryak/project-elements/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwppbXBvcnQgKiBhcyB0b3BvanNvbiBmcm9tICd0b3BvanNvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndXNfbWFwJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFwRGF0YTogbnVsbCwKICAgICAgZmxpZ2h0c0RhdGE6IG51bGwsCiAgICAgIHJhd0RhdGE6IG51bGwsCiAgICAgIGFpcnBvcnRfZ2VvOiBudWxsLAogICAgICBjdXJyX2FpcnBvcnQ6IG51bGwsCiAgICAgIGRhdGVWYWx1ZTogJzIwMjEtMDgtMDEnLAogICAgICBtaW46ICcyMDIxLTA4LTAxJywKICAgICAgbWF4OiAnMjAyMS0wOC0zMScKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBkcmF3UGF0aDogZnVuY3Rpb24gZHJhd1BhdGgoc3RhdGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgICAgY29uc29sZS5sb2codGhpcy5jdXJyX3N0YXRlKTsKICAgICAgdmFyIHN0YXRlRGF0YSA9IHRoaXMuZmxpZ2h0c0RhdGEuZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuT1JJR0lOX1NUQVRFX05NID09IHN0YXRlICYmIGQuRkxfREFURSA9PSBfdGhpcy5kYXRlVmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgbG9jYWxfYWlycG9ydCA9IHN0YXRlRGF0YVswXS5PUklHSU47CgogICAgICBpZiAodGhpcy5jdXJyX2FpcnBvcnQgPT0gbnVsbCkgewogICAgICAgIHRoaXMuY3Vycl9haXJwb3J0ID0gbG9jYWxfYWlycG9ydDsKICAgICAgICB2YXIgbGluayA9IFtdOwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0YXRlRGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgICAgdmFyIGZyb20gPSBzdGF0ZURhdGFbaV0uT1JJR0lOOwogICAgICAgICAgdmFyIHRvID0gc3RhdGVEYXRhW2ldLkRFU1Q7CiAgICAgICAgICB2YXIgZnJvbV9sbmcgPSB0aGlzLmFpcnBvcnRfZ2VvLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgICAgICByZXR1cm4gZC5sb2NhbF9jb2RlID09IGZyb207CiAgICAgICAgICB9KVswXS5sb25naXR1ZGVfZGVnOwogICAgICAgICAgdmFyIGZyb21fbGF0ID0gdGhpcy5haXJwb3J0X2dlby5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGQubG9jYWxfY29kZSA9PSBmcm9tOwogICAgICAgICAgfSlbMF0ubGF0aXR1ZGVfZGVnOwogICAgICAgICAgdmFyIHRvX2xuZyA9IHRoaXMuYWlycG9ydF9nZW8uZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgIHJldHVybiBkLmxvY2FsX2NvZGUgPT0gdG87CiAgICAgICAgICB9KVswXS5sb25naXR1ZGVfZGVnOwogICAgICAgICAgdmFyIHRvX2xhdCA9IHRoaXMuYWlycG9ydF9nZW8uZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgIHJldHVybiBkLmxvY2FsX2NvZGUgPT0gdG87CiAgICAgICAgICB9KVswXS5sYXRpdHVkZV9kZWc7CiAgICAgICAgICBsaW5rLnB1c2goewogICAgICAgICAgICB0eXBlOiAiTGluZVN0cmluZyIsCiAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbW2Zyb21fbG5nLCBmcm9tX2xhdF0sIFt0b19sbmcsIHRvX2xhdF1dCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHZhciBwcm9qZWN0aW9uID0gZDMuZ2VvQWxiZXJzVXNhKCkuc2NhbGUoMTMwMCkudHJhbnNsYXRlKFs0ODcuNSwgMzA1XSk7CiAgICAgICAgdmFyIHBhdGggPSBkMy5nZW9QYXRoKCkucHJvamVjdGlvbihwcm9qZWN0aW9uKTsKICAgICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjdXNfbWFwJyk7CiAgICAgICAgc3ZnLnNlbGVjdEFsbCgibXlQYXRoIikuZGF0YShsaW5rKS5lbnRlcigpLmFwcGVuZCgicGF0aCIpLmF0dHIoJ2NsYXNzJywgIiIuY29uY2F0KHRoaXMuY3Vycl9haXJwb3J0KSkuYXR0cignZGlzcGxheScsICd2aXNpYmxlJykuYXR0cigiZCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gcGF0aChkKTsKICAgICAgICB9KS5zdHlsZSgiZmlsbCIsICJub25lIikuc3R5bGUoInN0cm9rZSIsICJvcmFuZ2UiKS5zdHlsZSgic3Ryb2tlLXdpZHRoIiwgMik7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyX2FpcnBvcnQgPT0gbG9jYWxfYWlycG9ydCkgewogICAgICAgIGQzLnNlbGVjdEFsbCgiLiIuY29uY2F0KHRoaXMuY3Vycl9haXJwb3J0KSkuYXR0cignZGlzcGxheScsICdub25lJyk7CiAgICAgICAgdGhpcy5jdXJyX2FpcnBvcnQgPSBudWxsOwogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCdjbGljayB0aGUgc3RhdGUgc2hvd24gZmlyc3QnKTsKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAgIHdpbmRvdy5kcmF3UGF0aCA9IHRoaXMuZHJhd1BhdGg7CiAgICB9LAogICAgYnVpbGRNYXA6IGZ1bmN0aW9uIGJ1aWxkTWFwKCkgewogICAgICAvLyB2YXIgZHJhd1BhdGggPSB0aGlzLmRyYXdQYXRoKCkKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3VzX21hcCcpLmF0dHIoJ3ZpZXdCb3gnLCBbMCwgMCwgOTc1LCA2MTBdKTsgLy8gdmFyIHByb2plY3Rpb24gPSBkMy5nZW9BbGJlcnNVc2EoKS5zY2FsZSgxMzAwKS50cmFuc2xhdGUoWzQ4Ny41LCAzMDVdKTsKCiAgICAgIHZhciBwYXRoID0gZDMuZ2VvUGF0aCgpOwogICAgICBzdmcuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnc3RhdGVzJykuc2VsZWN0QWxsKCdwYXRoJykuZGF0YSh0b3BvanNvbi5mZWF0dXJlKHRoaXMubWFwRGF0YSwgdGhpcy5tYXBEYXRhLm9iamVjdHMuc3RhdGVzKS5mZWF0dXJlcykuZW50ZXIoKS5hcHBlbmQoJ3BhdGgnKS5hdHRyKCdvbmNsaWNrJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gImRyYXdQYXRoKCciLmNvbmNhdChkLnByb3BlcnRpZXMubmFtZSwgIicpIik7CiAgICAgIH0pLmF0dHIoJ2QnLCBwYXRoKTsgLy8gLmF0dHIoJ29uY2xpY2snLCBkID0+IGBhbGVydCgnJHtkLnByb3BlcnRpZXMubmFtZX0nKWApCiAgICAgIC8vIC5vbignY2xpY2snLCBkID0+IChgZHJhd1BhdGgoJyR7ZC5wcm9wZXJ0aWVzLm5hbWV9JylgKSkKCiAgICAgIHN2Zy5hcHBlbmQoJ3BhdGgnKSAvL/CfjpIgZXhwbGFpbjoKICAgICAgLmF0dHIoJ2NsYXNzJywgJ3N0YXRlLWJvcmRlcnMnKS5hdHRyKCdkJywgcGF0aCh0b3BvanNvbi5tZXNoKHRoaXMubWFwRGF0YSwgdGhpcy5tYXBEYXRhLm9iamVjdHMuc3RhdGVzLCBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhICE9PSBiOwogICAgICB9KSkpOyAvLyBzdmcuc2VsZWN0QWxsKCJjaXJjbGUiKQogICAgICAvLyAgIC5kYXRhKGFpcnBvcnRzKS5lbnRlcigpCiAgICAgIC8vICAgLmFwcGVuZCgiY2lyY2xlIikKICAgICAgLy8gICAuYXR0cignY2xhc3MnLCAnYWlycG9ydCcpCiAgICAgIC8vICAgLmF0dHIoImN4IiwgZCA9PiB7IHJldHVybiBwcm9qZWN0aW9uKGQpWzBdfSkKICAgICAgLy8gICAuYXR0cigiY3kiLCBkID0+IHsgcmV0dXJuIHByb2plY3Rpb24oZClbMV19KQogICAgICAvLyAgIC5hdHRyKCJyIiwgIjRweCIpCiAgICAgIC8vICAgLmF0dHIoImZpbGwiLCAicmVkIikKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBpZiAoIXRoaXMuJHN0b3JlLnN0YXRlLmh0bWxNYXBEYXRhKSB7CiAgICAgIHZhciBwcm9taXNlcyA9IFtdOwogICAgICBwcm9taXNlcy5wdXNoKGQzLmpzb24oJ3N0YXRlcy1hbGJlcnMtMTBtLmpzb24nKSk7CiAgICAgIHByb21pc2VzLnB1c2goZDMuY3N2KCdmbGlnaHRzLmNzdicpKTsKICAgICAgcHJvbWlzZXMucHVzaChkMy5jc3YoJ2FpcnBvcnRfZ2VvLmNzdicpKTsKICAgICAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oZnVuY3Rpb24gKHZhbHVlcykgewogICAgICAgIF90aGlzMi5yYXdEYXRhID0gdmFsdWVzOwogICAgICAgIF90aGlzMi5tYXBEYXRhID0gdmFsdWVzWzBdOwogICAgICAgIF90aGlzMi5mbGlnaHRzRGF0YSA9IHZhbHVlc1sxXTsKICAgICAgICBfdGhpczIuYWlycG9ydF9nZW8gPSB2YWx1ZXNbMl07CgogICAgICAgIF90aGlzMi4kc3RvcmUuY29tbWl0KCdodG1sTWFwRGF0YScsIF90aGlzMi5yYXdEYXRhKTsKCiAgICAgICAgX3RoaXMyLmNyZWF0ZWQoKTsKCiAgICAgICAgX3RoaXMyLmJ1aWxkTWFwKCk7CiAgICAgIH0pOyAvLyBkMy5qc29uKCdzdGF0ZXMtYWxiZXJzLTEwbS5qc29uJykudGhlbihkYXRhID0+IHsKICAgICAgLy8gICB0aGlzLm1hcERhdGEgPSBkYXRhOwogICAgICAvLyAgIC8vIGNvbnNvbGUubG9nKCdjaGFydERhdGEgc2V0IGZyb20gZmlsZScpOwogICAgICAvLyAgIC8vIGNvbnNvbGUubG9nKCdjaGFydERhdGEgY29udGFpbnMnLCB0aGlzLm1hcERhdGEpOwogICAgICAvLyAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaHRtbE1hcERhdGEnLCB0aGlzLm1hcERhdGEpOwogICAgICAvLyAgIHRoaXMuYnVpbGRNYXAoKTsKICAgICAgLy8gICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmF3RGF0YSA9IHRoaXMuJHN0b3JlLnN0YXRlLmh0bWxNYXBEYXRhOwogICAgICB0aGlzLm1hcERhdGEgPSB0aGlzLnJhd0RhdGFbMF07CiAgICAgIHRoaXMuZmxpZ2h0c0RhdGEgPSB0aGlzLnJhd0RhdGFbMV07CiAgICAgIHRoaXMuYWlycG9ydF9nZW8gPSB0aGlzLnJhd0RhdGFbMl07IC8vIGNvbnNvbGUubG9nKCdjaGFydERhdGEgc2V0IGZyb20gc3RvcmUnKTsKICAgICAgLy8gY29uc29sZS5sb2coJ2NoYXJ0RGF0YSBjb250YWlucycsIHRoaXMubWFwRGF0YS5sZW5ndGgsICdyb3dzJyk7CgogICAgICB0aGlzLmNyZWF0ZWQoKTsKICAgICAgdGhpcy5idWlsZE1hcCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAaA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,KAAA,QAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAAA,EAAA,gBAAA;AAEA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,WAAA,EAAA,IAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,YANA;AAOA,MAAA,GAAA,EAAA,YAPA;AAQA,MAAA,GAAA,EAAA;AARA,KAAA;AAUA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,KADA,EACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA;AACA,UAAA,SAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,eAAA,IAAA,KAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,CAAA,SAAA;AAAA,OAAA,CAAA;AACA,UAAA,aAAA,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;;AACA,UAAA,KAAA,YAAA,IAAA,IAAA,EAAA;AACA,aAAA,YAAA,GAAA,aAAA;AACA,YAAA,IAAA,GAAA,EAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,IAAA,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AACA,cAAA,QAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,UAAA,IAAA,IAAA;AAAA,WAAA,EAAA,CAAA,EAAA,aAAA;AACA,cAAA,QAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,UAAA,IAAA,IAAA;AAAA,WAAA,EAAA,CAAA,EAAA,YAAA;AACA,cAAA,MAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,UAAA,IAAA,EAAA;AAAA,WAAA,EAAA,CAAA,EAAA,aAAA;AACA,cAAA,MAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,UAAA,IAAA,EAAA;AAAA,WAAA,EAAA,CAAA,EAAA,YAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,YADA;AAEA,YAAA,WAAA,EAAA,CAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CAAA;AAFA,WAAA;AAIA;;AACA,YAAA,UAAA,GAAA,EAAA,CAAA,YAAA,GAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;AACA,YAAA,IAAA,GAAA,EAAA,CAAA,OAAA,GAAA,UAAA,CAAA,UAAA,CAAA;AACA,YAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA;AACA,QAAA,GAAA,CAAA,SAAA,CAAA,QAAA,EACA,IADA,CACA,IADA,EAEA,KAFA,GAGA,MAHA,CAGA,MAHA,EAIA,IAJA,CAIA,OAJA,YAIA,KAAA,YAJA,GAKA,IALA,CAKA,SALA,EAKA,SALA,EAMA,IANA,CAMA,GANA,EAMA,UAAA,CAAA,EAAA;AAAA,iBAAA,IAAA,CAAA,CAAA,CAAA;AAAA,SANA,EAOA,KAPA,CAOA,MAPA,EAOA,MAPA,EAQA,KARA,CAQA,QARA,EAQA,QARA,EASA,KATA,CASA,cATA,EASA,CATA;AAUA,OA5BA,MA4BA,IAAA,KAAA,YAAA,IAAA,aAAA,EAAA;AACA,QAAA,EAAA,CAAA,SAAA,YAAA,KAAA,YAAA,GACA,IADA,CACA,SADA,EACA,MADA;AAEA,aAAA,YAAA,GAAA,IAAA;AACA,OAJA,MAIA;AACA,QAAA,KAAA,CAAA,6BAAA,CAAA;AACA;AAEA,KA1CA;AA2CA,IAAA,OA3CA,qBA2CA;AAAA,MAAA,MAAA,CAAA,QAAA,GAAA,KAAA,QAAA;AAAA,KA3CA;AA4CA,IAAA,QA5CA,sBA4CA;AACA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA,EACA,IADA,CACA,SADA,EACA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CADA,CAAA,CAFA,CAIA;;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,OAAA,EAAA;AAEA,MAAA,GAAA,CAAA,MAAA,CAAA,GAAA,EACA,IADA,CACA,OADA,EACA,QADA,EAEA,SAFA,CAEA,MAFA,EAGA,IAHA,CAGA,QAAA,CAAA,OAAA,CAAA,KAAA,OAAA,EAAA,KAAA,OAAA,CAAA,OAAA,CAAA,MAAA,EAAA,QAHA,EAIA,KAJA,GAKA,MALA,CAKA,MALA,EAMA,IANA,CAMA,SANA,EAMA,UAAA,CAAA;AAAA,mCAAA,CAAA,CAAA,UAAA,CAAA,IAAA;AAAA,OANA,EAOA,IAPA,CAOA,GAPA,EAOA,IAPA,EAPA,CAgBA;AACA;;AAEA,MAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AAAA,OACA,IADA,CACA,OADA,EACA,eADA,EAEA,IAFA,CAEA,GAFA,EAEA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA,KAAA,OAAA,CAAA,OAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,KAAA,CAAA;AAAA,OAAA,CAAA,CAFA,EAnBA,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA,GAfA;AA2FA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,QAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,wBAAA,CAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,aAAA,CAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,iBAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,MAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,CAAA,CAAA;;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,CAAA,OAAA;;AACA,QAAA,MAAA,CAAA,OAAA;;AACA,QAAA,MAAA,CAAA,QAAA;AACA,OARA,EALA,CAcA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,KAtBA,MAsBA;AACA,WAAA,OAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AACA,WAAA,OAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA,CAJA,CAKA;AACA;;AACA,WAAA,OAAA;AACA,WAAA,QAAA;AACA;AACA;AA5HA,CAAA","sourcesContent":["<template>\n    <div class=\"d3_map\">\n      <h1>This is an Map page</h1>\n      <div>\n        <label for=\"datepicker\">Choose a date</label>\n        <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n        <p>Value: '{{ dateValue }}'</p>\n      </div>\n      <svg id='us_map'></svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\n\nexport default {\n  name: 'us_map',\n  data: function () {\n\n    return {\n      mapData: null,\n      flightsData: null,\n      rawData: null,\n      airport_geo: null,\n      curr_airport: null,\n      dateValue: '2021-08-01',\n      min: '2021-08-01',\n      max: '2021-08-31'\n    }\n  }, \n  methods: {\n    drawPath(state) {\n      console.log(state)\n      console.log(this.curr_state)\n      var stateData = this.flightsData.filter(d => d.ORIGIN_STATE_NM == state && d.FL_DATE == this.dateValue)\n      var local_airport = stateData[0].ORIGIN\n      if (this.curr_airport == null){\n        this.curr_airport = local_airport\n        var link = []\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          link.push({\n            type: \"LineString\",\n            coordinates: [[from_lng, from_lat],[to_lng, to_lat]]\n          })\n        }\n        var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n        var path = d3.geoPath().projection(projection);\n        var svg = d3.select('#us_map')\n        svg.selectAll(\"myPath\")\n          .data(link)\n          .enter()\n          .append(\"path\")\n            .attr('class', `${this.curr_airport}`)\n            .attr('display', 'visible')\n            .attr(\"d\", function(d){ return path(d)})\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2)\n      } else if (this.curr_airport == local_airport) {\n        d3.selectAll(`.${this.curr_airport}`)\n          .attr('display', 'none')\n        this.curr_airport = null\n      } else {\n        alert('click the state shown first')\n      }\n      \n    },\n    created(){window.drawPath =this.drawPath;},\n    buildMap () {\n      // var drawPath = this.drawPath()\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      // var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n      var path = d3.geoPath();\n      \n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n          .attr('onclick', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\t\t.attr('d', path)\n          \n          // .attr('onclick', d => `alert('${d.properties.name}')`)\n          // .on('click', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\n\t\t\t\tsvg.append('path')  //🎒 explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n        // svg.selectAll(\"circle\")\n        //   .data(airports).enter()\n        //   .append(\"circle\")\n        //   .attr('class', 'airport')\n        //   .attr(\"cx\", d => { return projection(d)[0]})\n        //   .attr(\"cy\", d => { return projection(d)[1]})\n        //   .attr(\"r\", \"4px\")\n        //   .attr(\"fill\", \"red\")\n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.json('states-albers-10m.json'))\n      promises.push(d3.csv('flights.csv'))\n      promises.push(d3.csv('airport_geo.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.mapData = values[0]\n        this.flightsData = values[1]\n        this.airport_geo = values[2]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.created();\n        this.buildMap();\n      })\n      // d3.json('states-albers-10m.json').then(data => {\n      //   this.mapData = data;\n      //   // console.log('chartData set from file');\n      //   // console.log('chartData contains', this.mapData);\n      //   this.$store.commit('htmlMapData', this.mapData);\n\n      //   this.buildMap();\n      //   });\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.mapData = this.rawData[0]\n      this.flightsData = this.rawData[1]\n      this.airport_geo = this.rawData[2]\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.created();\n      this.buildMap();\n    }\n  }\n}\n</script>\n\n<style>\n.states {\n  fill: #ccc;\n}\n\t\t\n.airport :hover {\n  fill:black;\n}\n\n.state-borders {\n  fill: none;\n  stroke: white;\n  /* stroke-width: 0.5px; */\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n</style>"],"sourceRoot":"src/views"}]}