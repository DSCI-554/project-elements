{"remainingRequest":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/babel-loader/lib/index.js!/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weidil/Desktop/DSCI-554/frontend/project-app/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/src/views/Map.vue","mtime":1637220933530},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/babel.config.js","mtime":1636616404243},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weidil/Desktop/DSCI-554/frontend/project-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"d3_map\">\n      <h1>This is an Map page</h1>\n      <b-tabs content-class=\"mt-3\">\n        <b-tab title=\"D3.map\" active>\n          <div>\n            <label for=\"datepicker\">Choose a date</label>\n            <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n          </div>\n          <svg id='us_map'></svg>\n        </b-tab>\n        <b-tab title=\"Mapbox.map\">\n          <p>I'm the second tab</p>\n          <div id='mbfm' class=\"mapbox_container\">\n            <div class='map-overlay' id='features'><h2>Building Capacity</h2><div id='pd'><p>Hover over a building!</p></div></div>\n            <!-- <div class='map-overlay' id='legend'></div> -->\n          </div>\n        </b-tab>\n        <!-- <b-tab title=\"Disabled\" disabled><p>I'm a disabled tab!</p></b-tab> -->\n      </b-tabs>\n      <!-- <div>\n        <label for=\"datepicker\">Choose a date</label>\n        <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n        <p>Value: '{{ dateValue }}'</p>\n      </div>\n      <svg id='us_map'></svg> -->\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\n\nexport default {\n  name: 'us_map',\n  data: function () {\n\n    return {\n      mapData: null,\n      flightsData: null,\n      rawData: null,\n      airport_geo: null,\n      curr_airport: null,\n      dateValue: '2021-08-01',\n      min: '2021-08-01',\n      max: '2021-08-31'\n    }\n  }, \n  methods: {\n    drawPath(state) {\n      var stateData = this.flightsData.filter(d => d.ORIGIN_STATE_NM == state && d.FL_DATE == this.dateValue)\n      var local_airport = stateData[0].ORIGIN\n      if (this.curr_airport == null){\n        this.curr_airport = local_airport\n        var link = []\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          // var from_city = stateData[i].ORIGIN_CITY_NAME\n          // var to_city = stateData[i].DEST_CITY_NAME\n          var del_t = stateData[i].ARR_DELAY\n          var carrier = stateData[i].CARRIER_DELAY\n          var weather = stateData[i].WEATHER_DELAY\n          var nas = stateData[i].NAS_DELAY\n          var sec = stateData[i].SECURITY_DELAY\n          var aircraft = stateData[i].LATE_AIRCRAFT_DELAY\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          link.push({\n            type: \"LineString\",\n            coordinates: [[from_lng, from_lat],[to_lng, to_lat]],\n            from: from,\n            to: to,\n            del_t: del_t,\n            carrier: carrier,\n            weather: weather,\n            nas: nas,\n            sec: sec,\n            aircraft: aircraft\n\n          })\n        }\n        var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n        var path = d3.geoPath().projection(projection);\n        var svg = d3.select('#us_map')\n        svg.selectAll(\"myPath\")\n          .data(link)\n          .enter()\n          .append(\"path\")\n            .attr('class', `${this.curr_airport}`)\n            .attr('display', 'visible')\n            .attr(\"d\", function(d){ return path(d)})\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2)\n            .on('mouseover', function () {\n              d3.select(this)\n              .style('stroke', 'red')\n              .style('stroke-width', 8)\n            })\n            .on('mouseout', function () {\n              d3.select(this)\n                .style('stroke', 'orange')\n                .style('stroke-width', 2)\n            })\n            .append('title')\n            .text(d => `From: ${d.from} \\nTo: ${d.to} \\nDelayed Time: ${del_t} \\nCarrier: ${carrier} \\nWeather: ${weather} \\nNAS: ${nas} \\n Security: ${sec} \\nAircraft: ${aircraft}`)\n            \n      } else if (this.curr_airport == local_airport) {\n        d3.selectAll(`.${this.curr_airport}`)\n          .attr('display', 'none')\n        this.curr_airport = null\n      } else {\n        alert('click the state shown first')\n      }\n      \n    },\n    created(){window.drawPath =this.drawPath;},\n    buildMap () {\n      // var drawPath = this.drawPath()\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      var path = d3.geoPath();\n      \n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n          .attr('onclick', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\t\t.attr('d', path)\n        \n\t\t\t\n\t\t\t\tsvg.append('path')  //🎒 explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n    },\n    buildMapbox () {\n      mapboxgl.accessToken = 'pk.eyJ1Ijoid2xvdSIsImEiOiJja3Y2cGEwMm8xbWtsMm5ubmNtd2tlNnE0In0.Wy7wOVN5-NJ6Ye8kzCVcBg';\n      const map = new mapboxgl.Map({\n      container: 'mbfm', // container ID\n      style: 'mapbox://styles/mapbox/dark-v10', // style URL\n      center: [-118.2861669,34.0221305], // starting position [lng, lat]\n      zoom: 15.5 // starting zoom\n      });\n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.json('states-albers-10m.json'))\n      promises.push(d3.csv('flights.csv'))\n      promises.push(d3.csv('airport_geo.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.mapData = values[0]\n        this.flightsData = values[1]\n        this.airport_geo = values[2]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.created();\n        this.buildMap();\n      })\n      // d3.json('states-albers-10m.json').then(data => {\n      //   this.mapData = data;\n      //   // console.log('chartData set from file');\n      //   // console.log('chartData contains', this.mapData);\n      //   this.$store.commit('htmlMapData', this.mapData);\n\n      //   this.buildMap();\n      //   });\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.mapData = this.rawData[0]\n      this.flightsData = this.rawData[1]\n      this.airport_geo = this.rawData[2]\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.created();\n      this.buildMap();\n    }\n  }\n}\n</script>\n\n<style>\n.states {\n  fill: #ccc;\n}\n\t\t\n.singlePath{\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke-width: 4;\n}\n.singlePath :hover {\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke: red;\n  stroke-width: 4;\n}\n\n\n\n.state-borders {\n  fill: none;\n  stroke: white;\n  /* stroke-width: 0.5px; */\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n</style>"],"sourceRoot":"src/views"}]}