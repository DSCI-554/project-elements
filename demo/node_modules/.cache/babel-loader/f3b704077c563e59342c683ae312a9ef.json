{"remainingRequest":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/babel-loader/lib/index.js!/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/src/views/Map.vue","mtime":1638399546998},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/babel.config.js","mtime":1637278778268},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":1637278779191},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/babel-loader/lib/index.js","mtime":1637278778721},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":1637278779191},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/vue-loader/lib/index.js","mtime":1637278782397}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"d3_map\">\n      <b-tabs content-class=\"mt-3\">\n        <b-tab title=\"D3.map\" active>\n          <div>\n            <label for=\"datepicker\">Choose a date</label>\n            <b-form-datepicker id=\"datepicker\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n          </div>\n          <svg id='us_map'></svg>\n        </b-tab>\n        <b-tab title=\"Mapbox.map\">\n          <p>I'm the second tab</p>\n          <b-row>\n            <b-col>\n              <b-container>\n                <label for=\"datepicker1\">Choose a date</label>\n                <b-form-datepicker id=\"datepicker1\" :min=\"min\" :max=\"max\" v-model=\"dateValue\" class=\"mb-2\" placeholder=\"Sunday, August 1, 2021\"></b-form-datepicker>\n              </b-container>\n            </b-col>\n            <b-col>\n              <b-container>\n                <label for=\"aiportpicker\" >Choose Departure Airport</label>\n                <b-form-select id = \"airportpicker\" v-model=\"selected\" :options=\"options\" size='lg'></b-form-select>\n              </b-container>\n            </b-col>\n          </b-row>\n          <!-- <div id='mbfm' class=\"mapbox_container\"> -->\n            <!-- <div class='map-overlay' id='features'><h2>Building Capacity</h2><div id='pd'><p>Hover over a building!</p></div></div> -->\n            <!-- <div class='map-overlay' id='legend'></div> -->\n          <!-- </div> -->\n          <b-container id='mbfm' class=\"mapbox_container\">\n            <!-- Content here -->\n            <div id='features'><h4>Flight Delay Info</h4><div id='pd'><p>Hover over a path!</p></div></div>\n\n          </b-container>\n        </b-tab>\n      </b-tabs>\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson'\nimport Mapbox from \"mapbox-gl\";\nimport * as turf from \"@turf/turf\";\n// import { MglMap } from \"vue-mapbox\";\n\nexport default {\n  name: 'us_map',\n  data: function () {\n\n    return {\n      mapData: null,\n      flightsData: null,\n      rawData: null,\n      airport_geo: null,\n      curr_airport: null,\n      dateValue: '2021-08-01',\n      min: '2021-08-01',\n      max: '2021-08-31',\n      selected: null,\n      options: [\n        { value: null,text: 'Please select an airport'},\n        'ABQ','ANC','ATL','BDL','BHM','BNA','BOI','BOS','BTV','BWI','BZN','CHS','CLE','CLT','CRW','CVG','DCA','DEN','DFW','DSM','DTW',\n        'EWR','FAR','FSD','GUM','HNL','ICT','ILG','IND','JAC','JAN','JFK','LAS','LAX','LIT','MCO','MHT','MKE','MSP','MSY','OKC','OMA',\n        'ORD','PDX','PHL','PHX','PVD','PWM','SEA','SJU','SLC','STL','STT'],\n      routes: {\n        'type': 'FeatureCollection',\n        'features': []\n      },\n      map: null\n    }\n  }, \n  watch: {\n    selected() {\n      if (this.selected != null) {\n        this.updateRoute()\n      }\n    }\n  },\n  methods: {\n    drawPath(state) {\n      var stateData = this.flightsData.filter(d => d.ORIGIN_STATE_NM == state && d.FL_DATE == this.dateValue)\n      var local_airport = stateData[0].ORIGIN\n      if (this.curr_airport == null){\n        this.curr_airport = local_airport\n        var link = []\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          // var from_city = stateData[i].ORIGIN_CITY_NAME\n          // var to_city = stateData[i].DEST_CITY_NAME\n          var del_t = stateData[i].ARR_DELAY\n          var carrier = stateData[i].CARRIER_DELAY\n          var weather = stateData[i].WEATHER_DELAY\n          var nas = stateData[i].NAS_DELAY\n          var sec = stateData[i].SECURITY_DELAY\n          var aircraft = stateData[i].LATE_AIRCRAFT_DELAY\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          link.push({\n            type: \"LineString\",\n            coordinates: [[from_lng, from_lat],[to_lng, to_lat]],\n            from: from,\n            to: to,\n            del_t: del_t,\n            carrier: carrier,\n            weather: weather,\n            nas: nas,\n            sec: sec,\n            aircraft: aircraft\n\n          })\n        }\n        var projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);\n        var path = d3.geoPath().projection(projection);\n        var svg = d3.select('#us_map')\n        svg.selectAll(\"myPath\")\n          .data(link)\n          .enter()\n          .append(\"path\")\n            .attr('class', `${this.curr_airport}`)\n            .attr('display', 'visible')\n            .attr(\"d\", function(d){ return path(d)})\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2)\n            .on('mouseover', function () {\n              d3.select(this)\n              .style('stroke', 'red')\n              .style('stroke-width', 8)\n            })\n            .on('mouseout', function () {\n              d3.select(this)\n                .style('stroke', 'orange')\n                .style('stroke-width', 2)\n            })\n            .append('title')\n            .text(d => `From: ${d.from} \\nTo: ${d.to} \\nDelayed Time: ${del_t} \\nCarrier: ${carrier} \\nWeather: ${weather} \\nNAS: ${nas} \\n Security: ${sec} \\nAircraft: ${aircraft}`)\n            \n      } else if (this.curr_airport == local_airport) {\n        d3.selectAll(`.${this.curr_airport}`)\n          .attr('display', 'none')\n        this.curr_airport = null\n      } else {\n        alert('click the state shown first')\n      }\n      \n    },\n    created(){window.drawPath =this.drawPath;},\n    buildMap () {\n      // var drawPath = this.drawPath()\n      var svg = d3.select('#us_map')\n        .attr('viewBox', [0, 0, 975, 610])\n      var path = d3.geoPath();\n      \n\t\t\t\tsvg.append('g')\n\t\t\t\t\t.attr('class', 'states')\n\t\t\t\t\t.selectAll('path')\n\t\t\t\t\t.data(topojson.feature(this.mapData, this.mapData.objects.states).features)  \n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('path')\n          .attr('onclick', d => (`drawPath('${d.properties.name}')`))\n\t\t\t\t\t.attr('d', path)\n        \n\t\t\t\n\t\t\t\tsvg.append('path')  //🎒 explain:\n\t\t\t\t\t.attr('class', 'state-borders')\n\t\t\t\t\t.attr('d', path(topojson.mesh(this.mapData, this.mapData.objects.states, (a, b) => a !== b))); \n    },\n    buildMapbox () {\n      Mapbox.accessToken = 'pk.eyJ1Ijoid2xvdSIsImEiOiJja3Y2cGEwMm8xbWtsMm5ubmNtd2tlNnE0In0.Wy7wOVN5-NJ6Ye8kzCVcBg';\n      const map = new Mapbox.Map({\n        container: 'mbfm', // container ID\n        style: 'mapbox://styles/mapbox/dark-v10', // style URL\n        center: [-98.583333,39.833333], // starting position [lng, lat]\n        zoom: 3.5 // starting zoom\n      });\n\n      const route = {\n        'type': 'FeatureCollection',\n        'features': []\n      }\n      map.on('load', function () { \n        map.resize()\n        // map.resize()\n        map.addSource(`route`, {\n          'type': 'geojson',\n          'data': route\n        })\n        map.addLayer({\n          'id': `route`,\n          'source': `route`,\n          'type': 'line',\n          'paint': {\n            'line-width': 2,\n            'line-color': '#007cbf'\n          }\n        })\n      })\n      this.map = map\n    },\n    updateRoute () {\n      this.routes = {\n        'type': 'FeatureCollection',\n        'features': []\n        }\n      if (this.selected != null) {\n        var stateData = this.flightsData.filter(d => d.ORIGIN == this.selected && d.FL_DATE == this.dateValue)\n        for (let i = 0; i < stateData.length; i++) {\n          var from = stateData[i].ORIGIN\n          var to = stateData[i].DEST\n          var cName = stateData[i].MKT_UNIQUE_CARRIER\n          var fNum = stateData[i].MKT_CARRIER_FL_NUM\n          var del_t = stateData[i].ARR_DELAY\n          var del_reason = []\n          if (stateData[i].CARRIER_DELAY != 0) {\n            del_reason.push(`Carrier: ${stateData[i].CARRIER_DELAY} mins`)\n          }\n          if (stateData[i].WEATHER_DELAY != 0) {\n            del_reason.push(`Weather: ${stateData[i].WEATHER_DELAY} mins`)\n          }\n          if (stateData[i].NAS_DELAY != 0) {\n            del_reason.push(`NAS: ${stateData[i].NAS_DELAY} mins`)\n          }\n          if (stateData[i].SECURITY_DELAY != 0) {\n            del_reason.push(`Security: ${stateData[i].SECURITY_DELAY} mins`)\n          }\n          if (stateData[i].LATE_AIRCRAFT_DELAY != 0) {\n            del_reason.push(`Aircraft: ${stateData[i].LATE_AIRCRAFT_DELAY} mins`)\n          }\n          // var carrier = stateData[i].CARRIER_DELAY\n          // var weather = stateData[i].WEATHER_DELAY\n          // var nas = stateData[i].NAS_DELAY\n          // var sec = stateData[i].SECURITY_DELAY\n          // var aircraft = stateData[i].LATE_AIRCRAFT_DELAY\n          var from_lng = this.airport_geo.filter(d => d.local_code == from)[0].longitude_deg\n          var from_lat = this.airport_geo.filter(d => d.local_code == from)[0].latitude_deg\n          var to_lng = this.airport_geo.filter(d => d.local_code == to)[0].longitude_deg\n          var to_lat = this.airport_geo.filter(d => d.local_code == to)[0].latitude_deg\n          // const destination = [-77.032, 38.913];\n\n          // A simple line from origin to destination.\n          var greatCircle = turf.greatCircle([from_lng, from_lat],[to_lng, to_lat], {\n            properties: {'cName': cName,\n                         'fNum': fNum,\n                         'del_t': del_t,\n                         'del_r': del_reason.join(', ')\n                        }\n            });\n          this.routes.features.push(greatCircle)\n          \n        }\n      }\n      this.map.getSource('route').setData(this.routes);\n      this.map.on('click', 'route', (d) => {\n        var path = document.getElementById('pd');\n        path.innerHTML = `<div>Flight: ${d.features[0].properties.cName} ${d.features[0].properties.fNum}</div>` + \n                         `<div>Delay Time(mins): ${d.features[0].properties.del_t}</div>` +\n                         `<div>Reason: ${d.features[0].properties.del_r}</div>`\n      })\n      this.map.on('mouseenter', 'route', () => {\n        this.map.getCanvas().style.cursor = 'pointer';\n        });\n        \n        // Change the cursor back to a pointer\n        // when it leaves the states layer.\n      this.map.on('mouseleave', 'route', () => {\n        this.map.getCanvas().style.cursor = '';\n        });\n    }\n  },\n  mounted: function () {\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.json('states-albers-10m.json'))\n      promises.push(d3.csv('flights.csv'))\n      promises.push(d3.csv('airport_geo.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.mapData = values[0]\n        this.flightsData = values[1]\n        this.airport_geo = values[2]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.created();\n        this.buildMap();\n        this.buildMapbox()\n      })\n      // d3.json('states-albers-10m.json').then(data => {\n      //   this.mapData = data;\n      //   // console.log('chartData set from file');\n      //   // console.log('chartData contains', this.mapData);\n      //   this.$store.commit('htmlMapData', this.mapData);\n\n      //   this.buildMap();\n      //   });\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.mapData = this.rawData[0]\n      this.flightsData = this.rawData[1]\n      this.airport_geo = this.rawData[2]\n      // console.log('chartData set from store');\n      // console.log('chartData contains', this.mapData.length, 'rows');\n      this.created();\n      this.buildMap();\n      this.buildMapbox()\n    }\n  }\n}\n</script>\n\n<style>\n.states {\n  fill: #ccc;\n}\n\t\t\n.singlePath{\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke-width: 4;\n}\n.singlePath :hover {\n  /* .style(\"fill\", \"none\")\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 2) */\n  stroke: red;\n  stroke-width: 4;\n}\n\n\n\n.state-borders {\n  fill: none;\n  stroke: white;\n  /* stroke-width: 0.5px; */\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  pointer-events: none;\n}\n.mapbox_container {\n    position: relative;\n    height: 610px !important;\n    width: 975px !important;\n    display: inline-block;\n    z-index: 1;\n}\n\n#airportpicker{\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n#features {\n  position: absolute;\n  background: rgba(255, 255, 255, 0.7);\n  margin-right: 20px;\n  margin-left: 20px;\n  font-family: Arial, sans-serif;\n  overflow: auto;\n  border-radius: 3px;\n  right: 0;\n  height: 100px;\n  margin-top: 20px;\n  width: 300px;\n  z-index: 2;\n  padding-left: 20px;\n  text-anchor: middle;\n}\n</style>"],"sourceRoot":"src/views"}]}