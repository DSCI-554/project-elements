{"remainingRequest":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/babel-loader/lib/index.js!/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/src/views/Dashboard.vue","mtime":1638581795877},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/babel.config.js","mtime":1637278778268},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":1637278779191},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/babel-loader/lib/index.js","mtime":1637278778721},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/cache-loader/dist/cjs.js","mtime":1637278779191},{"path":"/Users/zhangzixin/Desktop/USC/DSCI554/project-elements/demo/node_modules/vue-loader/lib/index.js","mtime":1637278782397}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKaW1wb3J0IHsgbmVzdCB9IGZyb20gJ2QzLWNvbGxlY3Rpb24nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2QzQ2hhcnQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByYXdEYXRhOiBudWxsLAogICAgICBsaW5lRGF0YTogbnVsbCwKICAgICAgcmVnaW9uOiBudWxsLAogICAgICB0cmVlbWFwRGF0YTogbnVsbCwKICAgICAgcGllRGF0YTogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1aWxkTGluZUNoYXJ0OiBmdW5jdGlvbiBidWlsZExpbmVDaGFydCgpIHsKICAgICAgdmFyIGxpbmVPcGFjaXR5ID0gIjAuMjUiOwogICAgICB2YXIgbGluZU9wYWNpdHlIb3ZlciA9ICIwLjg1IjsKICAgICAgdmFyIG90aGVyTGluZXNPcGFjaXR5SG92ZXIgPSAiMC4yNSI7CiAgICAgIHZhciBsaW5lU3Ryb2tlID0gIjJweCI7CiAgICAgIHZhciBsaW5lU3Ryb2tlSG92ZXIgPSAiMy41cHgiOwogICAgICAvKgogICAgICB2YXIgY2lyY2xlT3BhY2l0eSA9ICcwLjg1JzsKICAgICAgdmFyIGNpcmNsZU9wYWNpdHlPbkxpbmVIb3ZlciA9ICIwLjI1IgogICAgICB2YXIgY2lyY2xlUmFkaXVzID0gMzsKICAgICAgdmFyIGNpcmNsZVJhZGl1c0hvdmVyID0gNjsqLwoKICAgICAgdmFyIHBhcnNlRGF0ZSA9IGQzLnRpbWVQYXJzZSgiJVktJW0tJWQiKTsKICAgICAgdmFyIGRhdGEgPSB0aGlzLmxpbmVEYXRhOyAvL2NvbnNvbGUubG9nKGRhdGFbMF0uRkxfREFURSk7IC8vdGhpcyB3b3JrcwoKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5kYXRlID0gcGFyc2VEYXRlKGQuRkxfREFURSk7CiAgICAgICAgZC5jYXJyaWVyID0gZC5NS1RfVU5JUVVFX0NBUlJJRVI7CiAgICAgICAgZC5kZWxheSA9ICtkLk5VTV9PRl9ERUxBWTsKICAgICAgfSk7CiAgICAgIHZhciBzdW1zdGF0ID0gbmVzdCgpIC8vIG5lc3QgZnVuY3Rpb24gYWxsb3dzIHRvIGdyb3VwIHRoZSBjYWxjdWxhdGlvbiBwZXIgbGV2ZWwgb2YgYSBmYWN0b3IKICAgICAgLmtleShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmNhcnJpZXI7CiAgICAgIH0pLmVudHJpZXMoZGF0YSk7IC8vY29uc29sZS5sb2coc3Vtc3RhdCk7IC8vd29ya2luZwoKICAgICAgdmFyIGFycl90aW1lID0gZDMuZXh0ZW50KGRhdGEsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0ZTsKICAgICAgfSk7CiAgICAgIHZhciBtYXJnaW4gPSB7CiAgICAgICAgdG9wOiAxMCwKICAgICAgICByaWdodDogMzAsCiAgICAgICAgYm90dG9tOiAzMCwKICAgICAgICBsZWZ0OiA2MAogICAgICB9LAogICAgICAgICAgd2lkdGggPSAxMjAwIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQsCiAgICAgICAgICBoZWlnaHQgPSA2MDAgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbTsgLy8gYXBwZW5kIHRoZSBzdmcgb2JqZWN0IHRvIHRoZSBib2R5IG9mIHRoZSBwYWdlCgogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjbGluZV9jaGFydCIpLmFwcGVuZCgic3ZnIikuYXR0cigid2lkdGgiLCB3aWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KS5hdHRyKCJoZWlnaHQiLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSkuYXBwZW5kKCJnIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgbWFyZ2luLmxlZnQgKyAiLCIgKyBtYXJnaW4udG9wICsgIikiKTsgLy9jb25zb2xlLmxvZyhhcnJfdGltZSk7IC8vd29ya2luZwogICAgICAvL0FkZCB4LWF4aXMKCiAgICAgIHZhciB4ID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oYXJyX3RpbWUpLnJhbmdlKFswLCB3aWR0aF0pOwogICAgICBzdmcuYXBwZW5kKCJnIikudHJhbnNpdGlvbigpLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwiICsgaGVpZ2h0ICsgIikiKS5jYWxsKGQzLmF4aXNCb3R0b20oeCkudGlja3MoMzIpLnRpY2tGb3JtYXQoZDMudGltZUZvcm1hdCgnJWIgJWQnKSkpOwogICAgICB2YXIgbWF4X2RhdGEgPSBkMy5tYXgoZGF0YSwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gK2QuZGVsYXk7CiAgICAgIH0pOyAvL2NvbnNvbGUubG9nKG1heF9kYXRhKQogICAgICAvLyBBZGQgeS1heGlzCgogICAgICB2YXIgeSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCBtYXhfZGF0YV0pLnJhbmdlKFtoZWlnaHQsIDBdKTsKICAgICAgc3ZnLmFwcGVuZCgiZyIpLmNhbGwoZDMuYXhpc0xlZnQoeSkpLmFwcGVuZCgndGV4dCcpLmF0dHIoIngiLCAtMTUwKS5hdHRyKCJ5IiwgLTQwKS5hdHRyKCJ0cmFuc2Zvcm0iLCAicm90YXRlKC05MCkiKS5hdHRyKCJmaWxsIiwgIiM2OTY5NjkiKS5hdHRyKCJmb250LXNpemUiLCAiMTRweCIpLnRleHQoIk51bWJlciBvZiBEZWxheWVkIEZsaWdodHMiKTsKICAgICAgdmFyIGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKGQzLnNjaGVtZUNhdGVnb3J5MTApOwogICAgICAvKgogICAgICBjb25zdCB0cmFuc2l0aW9uUGF0aCA9IGQzCiAgICAgICAgLnRyYW5zaXRpb24oKQogICAgICAgIC5lYXNlKGQzLmVhc2VTaW4pCiAgICAgICAgLmR1cmF0aW9uKDEwMDApOyovCiAgICAgIC8vY29uc29sZS5sb2codHJhbnNpdGlvblBhdGgpCgogICAgICBzdmcuc2VsZWN0QWxsKCIubGluZSIpLmRhdGEoc3Vtc3RhdCkuZW50ZXIoKS5hcHBlbmQoInBhdGgiKS5hdHRyKCJmaWxsIiwgIm5vbmUiKS5hdHRyKCJzdHJva2UiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBjb2xvcihkLmtleSk7CiAgICAgIH0pLmF0dHIoInN0cm9rZS13aWR0aCIsIGxpbmVTdHJva2UpLmF0dHIoIm9wYWNpdHkiLCBsaW5lT3BhY2l0eSkuYXR0cigiZCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4geChkLmRhdGUpOwogICAgICAgIH0pLnkoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiB5KCtkLmRlbGF5KTsKICAgICAgICB9KShkLnZhbHVlcyk7CiAgICAgIH0pLm9uKCJtb3VzZW92ZXIiLCBmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIC8vY29uc29sZS5sb2coaSkKICAgICAgICBzdmcuYXBwZW5kKCJ0ZXh0IikudHJhbnNpdGlvbigpLmVhc2UoZDMuZWFzZVNpbikuYXR0cigiY2xhc3MiLCAidGl0bGUtdGV4dCIpLnN0eWxlKCJmaWxsIiwgY29sb3IoaS5rZXkpKS5zdHlsZSgiZm9udC1zaXplIiwgIjIycHgiKS50ZXh0KCJDYXJyaWVyOiAiICsgaS5rZXkpLmF0dHIoInRleHQtYW5jaG9yIiwgIm1pZGRsZSIpLmF0dHIoIngiLCAxMDApLmF0dHIoInkiLCAyMCk7CiAgICAgICAgZDMuc2VsZWN0QWxsKCcubGluZScpLnN0eWxlKCdvcGFjaXR5Jywgb3RoZXJMaW5lc09wYWNpdHlIb3Zlcik7CiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnN0eWxlKCdvcGFjaXR5JywgbGluZU9wYWNpdHlIb3Zlcikuc3R5bGUoInN0cm9rZS13aWR0aCIsIGxpbmVTdHJva2VIb3Zlcikuc3R5bGUoImN1cnNvciIsICJwb2ludGVyIik7CiAgICAgIH0pLm9uKCJtb3VzZW91dCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBzdmcuc2VsZWN0KCIudGl0bGUtdGV4dCIpLnJlbW92ZSgpOwogICAgICAgIGQzLnNlbGVjdEFsbCgiLmxpbmUiKS5zdHlsZSgnb3BhY2l0eScsIGxpbmVPcGFjaXR5KTsKICAgICAgICBkMy5zZWxlY3QodGhpcykuc3R5bGUoJ29wYWNpdHknLCBsaW5lT3BhY2l0eSkuc3R5bGUoInN0cm9rZS13aWR0aCIsIGxpbmVTdHJva2UpLnN0eWxlKCJjdXJzb3IiLCAibm9uZSIpOwogICAgICB9KTsKICAgICAgdmFyIGN1cnRhaW4gPSBzdmcuYXBwZW5kKCdyZWN0JykuYXR0cigneCcsIC0xICogd2lkdGgpLmF0dHIoJ3knLCAtMSAqIGhlaWdodCkuYXR0cignaGVpZ2h0JywgaGVpZ2h0KS5hdHRyKCd3aWR0aCcsIHdpZHRoKS5hdHRyKCdjbGFzcycsICdjdXJ0YWluJykuYXR0cigndHJhbnNmb3JtJywgJ3JvdGF0ZSgxODApJykuc3R5bGUoJ2ZpbGwnLCAnI2ZmZmZmZicpOwogICAgICAvKiBPcHRpb25hbGx5IGFkZCBhIGd1aWRlbGluZSAqLwoKICAgICAgdmFyIGd1aWRlbGluZSA9IHN2Zy5hcHBlbmQoJ2xpbmUnKS5hdHRyKCdzdHJva2UnLCAnIzMzMycpLmF0dHIoJ3N0cm9rZS13aWR0aCcsIDApLmF0dHIoJ2NsYXNzJywgJ2d1aWRlJykuYXR0cigneDEnLCAxKS5hdHRyKCd5MScsIDEpLmF0dHIoJ3gyJywgMSkuYXR0cigneTInLCBoZWlnaHQpOwogICAgICAvKiBDcmVhdGUgYSBzaGFyZWQgdHJhbnNpdGlvbiBmb3IgYW55dGhpbmcgd2UncmUgYW5pbWF0aW5nICovCgogICAgICB2YXIgdCA9IHN2Zy50cmFuc2l0aW9uKCkuZGVsYXkoNzUwKS5kdXJhdGlvbig2MDAwKS5lYXNlKGQzLmVhc2VMaW5lYXIpLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgZDMuc2VsZWN0KCdsaW5lLmd1aWRlJykudHJhbnNpdGlvbigpLnN0eWxlKCdvcGFjaXR5JywgMCkucmVtb3ZlKCk7CiAgICAgIH0pOwogICAgICB0LnNlbGVjdCgncmVjdC5jdXJ0YWluJykuYXR0cignd2lkdGgnLCAwKTsKICAgICAgdC5zZWxlY3QoJ2xpbmUuZ3VpZGUnKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB3aWR0aCArICcsIDApJyk7CiAgICAgIGQzLnNlbGVjdCgiI3Nob3dfZ3VpZGVsaW5lIikub24oImNoYW5nZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBndWlkZWxpbmUuYXR0cignc3Ryb2tlLXdpZHRoJywgdGhpcy5jaGVja2VkID8gMSA6IDApOwogICAgICAgIGN1cnRhaW4uYXR0cigib3BhY2l0eSIsIHRoaXMuY2hlY2tlZCA/IDAuNzUgOiAxKTsKICAgICAgfSk7CiAgICB9LAogICAgYnVpbGRUcmVlbWFwOiBmdW5jdGlvbiBidWlsZFRyZWVtYXAoKSB7CiAgICAgIHZhciB3aWR0aCA9IDk2MDsKICAgICAgdmFyIGhlaWdodCA9IDk2MDsKICAgICAgdmFyIG1hcmdpbiA9IHsKICAgICAgICB0b3A6IDEwLAogICAgICAgIHJpZ2h0OiAxMCwKICAgICAgICBib3R0b206IDEwLAogICAgICAgIGxlZnQ6IDEwCiAgICAgIH07CiAgICAgIHZhciBrZXlzID0gZDMucmFuZ2UoMSwgMzIpOwogICAgICBjb25zb2xlLmxvZyhrZXlzKTsKICAgICAgY29uc29sZS5sb2codGhpcy50cmVlbWFwRGF0YSk7CiAgICAgIHZhciBkYXRhID0gdGhpcy50cmVlbWFwRGF0YTsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5uYW1lID0gZC5PUklHSU5fU1RBVEVfTk07CiAgICAgICAgZC5TYXQgPSArZFsiMSJdOwogICAgICAgIGQuU3VuID0gK2RbIjIiXTsKICAgICAgICBkLk1vbiA9ICtkWyIzIl07CiAgICAgICAgZC5UdWUgPSArZFsiNCJdOwogICAgICAgIGQuV2VkID0gK2RbIjUiXTsKICAgICAgICBkLlRodSA9ICtkWyI2Il07CiAgICAgICAgZC5GcmkgPSArZFsiNyJdOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgIHZhciByZWdpb25CeVN0YXRlID0gbmV3IE1hcCh0aGlzLnJlZ2lvbi5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gW2QuU3RhdGUsIGQuUmVnaW9uXTsKICAgICAgfSkpOwogICAgICBjb25zb2xlLmxvZyhyZWdpb25CeVN0YXRlKTsKICAgICAgdmFyIGRpdmlzaW9uQnlTdGF0ZSA9IG5ldyBNYXAodGhpcy5yZWdpb24ubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIFtkLlN0YXRlLCBkLkRpdmlzaW9uXTsKICAgICAgfSkpOwogICAgICBjb25zb2xlLmxvZyhkaXZpc2lvbkJ5U3RhdGUpOwogICAgICB2YXIgZ3JvdXAgPSBkMy5ncm91cChkYXRhLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiByZWdpb25CeVN0YXRlLmdldChkLk9SSUdJTl9TVEFURV9OTSk7CiAgICAgIH0sIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRpdmlzaW9uQnlTdGF0ZS5nZXQoZC5PUklHSU5fU1RBVEVfTk0pOwogICAgICB9KTsgLy8KCiAgICAgIGNvbnNvbGUubG9nKGdyb3VwKTsKICAgICAgdmFyIGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKGdyb3VwLmtleXMoKSwgZDMuc2NoZW1lQ2F0ZWdvcnkxMC5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZDMuaW50ZXJwb2xhdGVSZ2IoZCwgIndoaXRlIikoMC41KTsKICAgICAgfSkpOwogICAgICBjb25zb2xlLmxvZyhjb2xvcik7CiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoIiN0cmVlbWFwIikuYXBwZW5kKCJzdmciKS5hdHRyKCJ3aWR0aCIsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpLmF0dHIoImhlaWdodCIsIGhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKS5hcHBlbmQoImciKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyBtYXJnaW4ubGVmdCArICIsIiArIG1hcmdpbi50b3AgKyAiKSIpOwogICAgICBjb25zb2xlLmxvZyhzdmcpOwogICAgICB2YXIgZm9ybWF0ID0gZDMuZm9ybWF0KCIsZCIpOwogICAgICB2YXIgdHJlZW1hcCA9IGQzLnRyZWVtYXAoKS50aWxlKGQzLnRyZWVtYXBSZXNxdWFyaWZ5KS5zaXplKFt3aWR0aCwgaGVpZ2h0XSkucm91bmQodHJ1ZSkucGFkZGluZ0lubmVyKDEpOwogICAgICB2YXIgcm9vdCA9IGQzLmhpZXJhcmNoeShncm91cCkuZWFjaEJlZm9yZShmdW5jdGlvbiAoZCkgewogICAgICAgIGQuZGF0YS5pZCA9IChkLnBhcmVudCA/IGQucGFyZW50LmRhdGEuaWQgKyAiLiIgOiAiIikgKyBkLmRhdGEubmFtZTsKICAgICAgfSkuc3VtKHN1bUJ5U2F0KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIGIuaGVpZ2h0IC0gYS5oZWlnaHQgfHwgYi52YWx1ZSAtIGEudmFsdWU7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyhyb290KTsKICAgICAgdHJlZW1hcChyb290KTsKICAgICAgdmFyIGNlbGwgPSBzdmcuc2VsZWN0QWxsKCJnIikuZGF0YShyb290LmxlYXZlcygpKS5lbnRlcigpLmFwcGVuZCgiZyIpLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIiArIGQueDAgKyAiLCIgKyBkLnkwICsgIikiOwogICAgICB9KTsKICAgICAgY2VsbC5hcHBlbmQoInJlY3QiKS5hdHRyKCJpZCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0YS5pZDsKICAgICAgfSkuYXR0cigid2lkdGgiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLngxIC0gZC54MDsKICAgICAgfSkuYXR0cigiaGVpZ2h0IiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC55MSAtIGQueTA7CiAgICAgIH0pLmF0dHIoImZpbGwiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBjb2xvcihkLnBhcmVudC5kYXRhWzBdKTsKICAgICAgfSk7CiAgICAgIGNlbGwuYXBwZW5kKCJjbGlwUGF0aCIpLmF0dHIoImlkIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gImNsaXAtIiArIGQuZGF0YS5pZDsKICAgICAgfSkuYXBwZW5kKCJ1c2UiKS5hdHRyKCJ4bGluazpocmVmIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gIiMiICsgZC5kYXRhLmlkOwogICAgICB9KTsKICAgICAgY2VsbC5hcHBlbmQoInRleHQiKS5hdHRyKCJjbGlwLXBhdGgiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiAidXJsKCNjbGlwLSIgKyBkLmRhdGEuaWQgKyAiKSI7CiAgICAgIH0pLnNlbGVjdEFsbCgidHNwYW4iKS5kYXRhKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0YS5uYW1lLnNwbGl0KC8oPz1bQS1aXVteQS1aXSkvZyk7CiAgICAgIH0pLmVudGVyKCkuYXBwZW5kKCJ0c3BhbiIpLmF0dHIoIngiLCA0KS5hdHRyKCJ5IiwgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gMTMgKyBpICogMTA7CiAgICAgIH0pLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZDsKICAgICAgfSk7CiAgICAgIGNlbGwuYXBwZW5kKCJ0aXRsZSIpLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gIkdlb2dyYXBoaWNhbCBEaXZpc2lvbjogIiArIGQucGFyZW50LmRhdGFbMF0gKyAiXG4iICsgIlN0YXRlIE5hbWU6ICIgKyBkLmRhdGEubmFtZSArICJcbiIgKyAiRGVsYXllZCBGbGlnaHQgQ291bnQ6ICIgKyBmb3JtYXQoZC52YWx1ZSk7CiAgICAgIH0pOwogICAgICB2YXIgZl9zZWxlY3RlZCA9IGQzLnNlbGVjdEFsbCgnaW5wdXRbdHlwZT0icmFkaW8iXScpLm5vZGUoKS52YWx1ZTsKICAgICAgY29uc29sZS5sb2coZl9zZWxlY3RlZCk7CiAgICAgIGQzLnNlbGVjdEFsbCgnaW5wdXRbdHlwZT0icmFkaW8iXScpLm9uKCJjaGFuZ2UiLCBjaGFuZ2VkKTsKICAgICAgLyoKICAgICAgZnVuY3Rpb24gY2hhbmdlX2YoKXsKICAgICAgICB2YXIgdCA9ICh0aGlzLnZhbHVlID09ICJzdW1CeVNhdCIpID8gc3VtQnlTYXQgOnN1bUJ5V2VkCiAgICAgICAgY29uc29sZS5sb2codCk7CiAgICAgICAgcmV0dXJuIHQKICAgICAgfQogICAgICBkMy5zZWxlY3RBbGwoJ2lucHV0W3R5cGU9InJhZGlvIl0nKQogICAgICAgICAgLmRhdGEoW3N1bUJ5U2F0LCBzdW1CeVdlZF0sIGZ1bmN0aW9uKGQpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZCA/IGQubmFtZSA6IHRoaXMudmFsdWU7IH0pCiAgICAgICAgICAub24oImNoYW5nZSIsIGNoYW5nZWQpOyovCgogICAgICB2YXIgdGltZW91dCA9IGQzLnRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGQzLnNlbGVjdCgnaW5wdXRbdmFsdWU9InN1bUJ5V2VkIl0nKS5wcm9wZXJ0eSgiY2hlY2tlZCIsIHRydWUpLmRpc3BhdGNoKCJjaGFuZ2UiKTsKICAgICAgfSwgMjAwMCk7CgogICAgICBmdW5jdGlvbiBjaGFuZ2VkKCkgewogICAgICAgIHRpbWVvdXQuc3RvcCgpOwogICAgICAgIHZhciB0ID0gdGhpcy52YWx1ZSA9PSAic3VtQnlTYXQiID8gc3VtQnlTYXQgOiBzdW1CeVdlZDsKICAgICAgICBjb25zb2xlLmxvZyh0KTsKICAgICAgICB0cmVlbWFwKHJvb3Quc3VtKHQpKTsKICAgICAgICBjZWxsLnRyYW5zaXRpb24oKS5kdXJhdGlvbig3NTApLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gInRyYW5zbGF0ZSgiICsgZC54MCArICIsIiArIGQueTAgKyAiKSI7CiAgICAgICAgfSkuc2VsZWN0KCJyZWN0IikuYXR0cigid2lkdGgiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQueDEgLSBkLngwOwogICAgICAgIH0pLmF0dHIoImhlaWdodCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC55MSAtIGQueTA7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHN1bUJ5V2VkKGQpIHsKICAgICAgICByZXR1cm4gZC5XZWQ7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHN1bUJ5U2F0KGQpIHsKICAgICAgICByZXR1cm4gZC5TYXQ7CiAgICAgIH0KICAgIH0sCiAgICBidWlsZFBpZUNoYXJ0OiBmdW5jdGlvbiBidWlsZFBpZUNoYXJ0KCkgewogICAgICB2YXIgd2lkdGggPSA2MDA7CiAgICAgIHZhciBoZWlnaHQgPSA2MDA7CiAgICAgIHZhciByYWRpdXMgPSBNYXRoLm1pbih3aWR0aCwgaGVpZ2h0KSAvIDI7CiAgICAgIHZhciBkb251dFdpZHRoID0gMTIwOwogICAgICB2YXIgbGVnZW5kUmVjdFNpemUgPSAxNTsKICAgICAgdmFyIGxlZ2VuZFNwYWNpbmcgPSA1OwogICAgICB2YXIgY29sb3IgPSBkMy5zY2FsZU9yZGluYWwoZDMuc2NoZW1lQ2F0ZWdvcnkxMCk7CiAgICAgIHZhciBkYXRhc2V0ID0gdGhpcy5waWVEYXRhOwogICAgICBkYXRhc2V0LmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICBkLmNvdW50ID0gK2QuY291bnQ7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyhkYXRhc2V0KTsKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3BpZV9jaGFydCcpLmFwcGVuZCgnc3ZnJykuYXR0cignd2lkdGgnLCB3aWR0aCkuYXR0cignaGVpZ2h0JywgaGVpZ2h0KS5hcHBlbmQoJ2cnKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB3aWR0aCAvIDIgKyAnLCcgKyBoZWlnaHQgLyAyICsgJyknKTsKICAgICAgdmFyIGFyYyA9IGQzLmFyYygpLmlubmVyUmFkaXVzKHJhZGl1cyAtIGRvbnV0V2lkdGgpLm91dGVyUmFkaXVzKHJhZGl1cyk7CiAgICAgIHZhciBwaWUgPSBkMy5waWUoKS52YWx1ZShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmNvdW50OwogICAgICB9KS5zb3J0KG51bGwpOwogICAgICB2YXIgcGF0aCA9IHN2Zy5zZWxlY3RBbGwoJ3BhdGgnKS5kYXRhKHBpZShkYXRhc2V0KSkuZW50ZXIoKS5hcHBlbmQoJ3BhdGgnKS5hdHRyKCdkJywgYXJjKS5hdHRyKCdmaWxsJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gY29sb3IoZC5kYXRhLmxhYmVsKTsKICAgICAgfSkub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgdmFyIHRvdGFsID0gZDMuc3VtKGRhdGFzZXQubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5jb3VudDsKICAgICAgICB9KSk7CiAgICAgICAgdmFyIHBlcmNlbnQgPSBNYXRoLnJvdW5kKDEwMDAgKiBpLmRhdGEuY291bnQgLyB0b3RhbCkgLyAxMDsKICAgICAgICBkMy5zZWxlY3QodGhpcykuYXR0cigic3Ryb2tlIiwgIiMwMDAiKTsKICAgICAgICBzdmcuYXBwZW5kKCJ0ZXh0IikuYXR0cigieSIsIDEwMCkuc3R5bGUoInRleHQtYW5jaG9yIiwgIm1pZGRsZSIpLnN0eWxlKCJmb250LXNpemUiLCAyNCkuYXR0cigiY2xhc3MiLCAibGFiZWwiKS5zdHlsZSgiZmlsbCIsIGNvbG9yKGkuZGF0YS5sYWJlbCkpLnRleHQoIlBlcmNlbnRhZ2U6IiArIHBlcmNlbnQgKyAiJSIpOwogICAgICAgIHN2Zy5hcHBlbmQoInRleHQiKS5hdHRyKCJ5IiwgLTkwKS5zdHlsZSgidGV4dC1hbmNob3IiLCAibWlkZGxlIikuc3R5bGUoImZvbnQtc2l6ZSIsIDI0KS5hdHRyKCJjbGFzcyIsICJsYWJlbDIiKS5zdHlsZSgiZmlsbCIsIGNvbG9yKGkuZGF0YS5sYWJlbCkpLnRleHQoaS5kYXRhLmxhYmVsKTsKICAgICAgfSk7CiAgICAgIHBhdGgub24oJ21vdXNlb3V0JywgZnVuY3Rpb24gKCkgewogICAgICAgIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJzdHJva2UiLCBudWxsKTsKICAgICAgICBzdmcuc2VsZWN0KCIubGFiZWwiKS5yZW1vdmUoKTsKICAgICAgICBzdmcuc2VsZWN0KCIubGFiZWwyIikucmVtb3ZlKCk7CiAgICAgIH0pOwogICAgICAvKgogICAgICAgIHBhdGgub24oJ21vdXNlbW92ZScsIGZ1bmN0aW9uKGQpIHsgIAogICAgICAgICAgdG9vbHRpcC5zdHlsZSgndG9wJywgKGQucGFnZVkgKyAxMCkgKyAncHgnKSAgICAgICAgICAKICAgICAgICAgICAgLnN0eWxlKCdsZWZ0JywgKGQzLnBhZ2VYICsgMTApICsgJ3B4Jyk7ICAgICAgICAgICAgIAogICAgICAgIH0pOyAgICAgICovCgogICAgICB2YXIgbGVnZW5kID0gc3ZnLnNlbGVjdEFsbCgnLmxlZ2VuZCcpLmRhdGEoY29sb3IuZG9tYWluKCkpLmVudGVyKCkuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnbGVnZW5kJykuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICB2YXIgaGVpZ2h0ID0gbGVnZW5kUmVjdFNpemUgKyBsZWdlbmRTcGFjaW5nOwogICAgICAgIHZhciBvZmZzZXQgPSBoZWlnaHQgKiBjb2xvci5kb21haW4oKS5sZW5ndGggLyAyOwogICAgICAgIHZhciBob3J6ID0gLTYgKiBsZWdlbmRSZWN0U2l6ZTsKICAgICAgICB2YXIgdmVydCA9IGkgKiBoZWlnaHQgLSBvZmZzZXQ7CiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIGhvcnogKyAnLCcgKyB2ZXJ0ICsgJyknOwogICAgICB9KTsKICAgICAgbGVnZW5kLmFwcGVuZCgncmVjdCcpLmF0dHIoJ3dpZHRoJywgbGVnZW5kUmVjdFNpemUpLmF0dHIoJ2hlaWdodCcsIGxlZ2VuZFJlY3RTaXplKS5zdHlsZSgnZmlsbCcsIGNvbG9yKS5zdHlsZSgnc3Ryb2tlJywgY29sb3IpOwogICAgICBsZWdlbmQuYXBwZW5kKCd0ZXh0JykuYXR0cigneCcsIGxlZ2VuZFJlY3RTaXplICsgbGVnZW5kU3BhY2luZykuYXR0cigneScsIGxlZ2VuZFJlY3RTaXplIC0gbGVnZW5kU3BhY2luZykudGV4dChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUuaHRtbE1hcERhdGEpIHsKICAgICAgdmFyIHByb21pc2VzID0gW107CiAgICAgIHByb21pc2VzLnB1c2goZDMuY3N2KCdEYXRhX2Zvcl9saW5lX2NoYXJ0LmNzdicpKTsKICAgICAgcHJvbWlzZXMucHVzaChkMy5jc3YoJ3VzX3JlZ2lvbi5jc3YnKSk7CiAgICAgIHByb21pc2VzLnB1c2goZDMuY3N2KCdEYXRhX2Zvcl90cmVlbWFwLmNzdicpKTsgLy9wcm9taXNlcy5wdXNoKGQzLmNzdigndGVzdF9kYXRhLmpzb24nKSkKCiAgICAgIHByb21pc2VzLnB1c2goZDMuY3N2KCdkZWxheS5jc3YnKSk7CiAgICAgIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKGZ1bmN0aW9uICh2YWx1ZXMpIHsKICAgICAgICBfdGhpcy5yYXdEYXRhID0gdmFsdWVzOwogICAgICAgIF90aGlzLmxpbmVEYXRhID0gdmFsdWVzWzBdOwogICAgICAgIF90aGlzLnJlZ2lvbiA9IHZhbHVlc1sxXTsKICAgICAgICBfdGhpcy50cmVlbWFwRGF0YSA9IHZhbHVlc1syXTsKICAgICAgICBfdGhpcy5waWVEYXRhID0gdmFsdWVzWzNdOwoKICAgICAgICBfdGhpcy4kc3RvcmUuY29tbWl0KCdodG1sTWFwRGF0YScsIF90aGlzLnJhd0RhdGEpOwoKICAgICAgICBfdGhpcy5idWlsZExpbmVDaGFydCgpOwoKICAgICAgICBfdGhpcy5idWlsZFRyZWVtYXAoKTsKCiAgICAgICAgX3RoaXMuYnVpbGRQaWVDaGFydCgpOwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmF3RGF0YSA9IHRoaXMuJHN0b3JlLnN0YXRlLmh0bWxNYXBEYXRhOwogICAgICB0aGlzLmxpbmVEYXRhID0gdGhpcy5yYXdEYXRhWzBdOwogICAgICB0aGlzLnJlZ2lvbiA9IHRoaXMucmF3RGF0YVsxXTsKICAgICAgdGhpcy50cmVlbWFwRGF0YSA9IHRoaXMucmF3RGF0YVsyXTsKICAgICAgdGhpcy5idWlsZExpbmVDaGFydCgpOwogICAgICB0aGlzLmJ1aWxkVHJlZW1hcCgpOwogICAgICB0aGlzLmJ1aWxkUGllQ2hhcnQoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"about\">\n    <b-tabs content-class=\"mt-3\">\n        <b-tab title=\"Analysis on Carriers\" active>\n          <b-button v-b-toggle.collapse-2 class=\"m-1\">Instruction</b-button>\n\n            <!-- Using value -->\n            <b-button v-b-toggle=\"'collapse-1'\" class=\"m-1\">Explanation</b-button>\n\n            <!-- Element to collapse -->\n            <b-collapse visible id=\"collapse-2\">\n              <b-card>\n                The Line chart shows the number of delayed flights on each day in August 2020. <br> \n                It'll show the carrier name when hovered over on lines. <br>\n                When \"Show Guideline & Curtain\" is checked during the initial animation, <br>\n                the progress of line drawing will show. <br> \n                For explanation of this page, please click the <code>Explanation</code> button\n              </b-card>\n            </b-collapse>\n            <b-collapse id=\"collapse-1\">\n              <b-card>\n                Throughout time, Carrier AA has the most delayed flight count, and Carrier HA has the least. <br>\n                However, major carriers do have more flights on each day to begin with,<br>\n                which directly increases the delayed flight count.<br>\n                This phenomenon can be observed by the gap (between 200~300 in y-axis) in the line chart between carriers, <br>\n                where the 4 major carriers AA, UA, WN, and DL are above the gap while the rest is below.\n              </b-card>\n            </b-collapse>\n\n            <h1>Which carriers have more delays?</h1>\n            <div class=\"title\">Interactive & Animated Line Chart: Number Of Delayed Flight Count For Carriers Through Time</div>\n            <br />\n            <label class=\"guideline\">\n              Show Guideline & Curtain\n              <input type=\"checkbox\" id=\"show_guideline\"/>\n            </label>\n            <br />\n            <svg width=\"1200\" height=\"600\" id=\"line_chart\"></svg>\n        </b-tab>\n\n        <b-tab title=\"Analysis on States\">\n          <b-button v-b-toggle.collapse-3 class=\"m-1\">Instruction</b-button>\n\n          <!-- Using value -->\n          <b-button v-b-toggle=\"'collapse-4'\" class=\"m-1\">Explanation</b-button>\n\n          <!-- Element to collapse -->\n          <b-collapse visible id=\"collapse-3\">\n            <b-card>\n              The treemap shows the count of delayed flights on each state in the U.S..<br>\n              Select \"Weekday\" to see data on a typical weekday, and \"Weekend\" for a typical weekend data. <br>\n              Mouse over each state to check the details. <br>\n              For explanation of this page, please click the <code>Explanation</code> button\n            </b-card>\n          </b-collapse>\n          <b-collapse id=\"collapse-4\">\n            <b-card>\n              The states are sorted and colored by their geographical division. <br>\n              The detailed information of each state can be found when you put mouse on each state,<br>\n              including their geographical division, state name, and exact count of delayed flights.<br>\n              One key advantage of treemap is that it can show the proportion of delayed flight directly through the size of each cell.<br>\n              Larger cells contain more flight delays.\n            </b-card>\n          </b-collapse>\n            <h1>What is proportion of the delayed flight count for each state?</h1>\n            <div class=\"title\"> Treemap: Number Of Delayed Flight Count of Each State with Comparsion on Weekend and Weekday</div>\n            <label class=\"selection\"><input type=\"radio\" name=\"mode\" value=\"sumBySat\" checked> Weekend</label>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <label class=\"selection\"><input type=\"radio\" name=\"mode\" value=\"sumByWed\"> Weekday</label>\n            <br />\n            <svg width=\"960\" height=\"960\" id=\"treemap\"></svg>\n        </b-tab>\n\n        <b-tab title=\"Analysis on Reasons\">\n          <b-button v-b-toggle.collapse-6 class=\"m-1\">Instruction</b-button>\n\n            <!-- Using value -->\n            <b-button v-b-toggle=\"'collapse-5'\" class=\"m-1\">Explanation</b-button>\n\n            <!-- Element to collapse -->\n            <b-collapse visible id=\"collapse-6\">\n              <b-card>\n                Hover over each section to see the percentage value of each delay reason. <br>\n                For explanation of this page, please click the <code>Explanation</code> button\n              </b-card>\n            </b-collapse>\n            <b-collapse id=\"collapse-5\">\n              <b-card>\n                The most frequent reason for flight delay is Air Carrier Delay(38%), <br>\n                followed by delays caused by Aircraft Arriving Late (34%). <br>\n                Delays caused by Security reason is the least. <br>\n                Surprisingly, delays caused by weather are only 5%.\n              </b-card>\n            </b-collapse>\n\n            <h1>What are the reasons a flight gets delayed?</h1>\n            <div class=\"title\"> Donut Chart: Percentage of Each Delayed Reasons</div>\n            <br/>\n            <svg width=\"600\" height=\"600\" id=\"pie_chart\"></svg>\n        </b-tab>\n    </b-tabs>\n  </div>\n</template>\n\n<script>\n\nimport * as d3 from 'd3';\nimport {nest} from 'd3-collection';\n\nexport default {\n  name: 'd3Chart',\n  data: function () {\n    return {\n      rawData: null,\n      lineData: null,\n      region:null,\n      treemapData:null,\n      pieData:null\n    }\n  },\n  methods: {\n    buildLineChart() {\n\n      var lineOpacity = \"0.25\";\n      var lineOpacityHover = \"0.85\";\n      var otherLinesOpacityHover = \"0.25\";\n      var lineStroke = \"2px\";\n      var lineStrokeHover = \"3.5px\";\n      /*\n      var circleOpacity = '0.85';\n      var circleOpacityOnLineHover = \"0.25\"\n      var circleRadius = 3;\n      var circleRadiusHover = 6;*/\n\n      var parseDate = d3.timeParse(\"%Y-%m-%d\");\n\n      var data = this.lineData;\n      //console.log(data[0].FL_DATE); //this works\n\n      data.forEach(function(d) { \n        d.date = parseDate(d.FL_DATE);\n        d.carrier = d.MKT_UNIQUE_CARRIER;\n        d.delay = +d.NUM_OF_DELAY;  \n\n      });\n\n      \n      var sumstat = nest() // nest function allows to group the calculation per level of a factor\n          .key(function(d) { return d.carrier;})\n          .entries(data);\n\n      //console.log(sumstat); //working\n\n      var arr_time = d3.extent(data, function(d) { return d.date; })\n      \n      var margin = {top: 10, right: 30, bottom: 30, left: 60},\n          width = 1200 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n\n      // append the svg object to the body of the page\n      var svg = d3.select(\"#line_chart\")\n        .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      //console.log(arr_time); //working\n      //Add x-axis\n      var x = d3.scaleLinear()\n        .domain(arr_time)\n        .range([ 0, width ]);\n      svg.append(\"g\")\n        .transition()\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x).ticks(32).tickFormat(d3.timeFormat('%b %d')));\n\n      var max_data = d3.max(data, function(d) { return +d.delay; })\n      //console.log(max_data)\n\n      // Add y-axis\n      var y = d3.scaleLinear()\n        .domain([0, max_data])\n        .range([ height, 0 ]);\n      svg.append(\"g\")\n        .call(d3.axisLeft(y))\n        .append('text')\n        .attr(\"x\", -150)\n        .attr(\"y\", -40)\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"fill\", \"#696969\")\n        .attr(\"font-size\", \"14px\")\n        .text(\"Number of Delayed Flights\");\n\n      var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n      /*\n      const transitionPath = d3\n        .transition()\n        .ease(d3.easeSin)\n        .duration(1000);*/\n      //console.log(transitionPath)\n\n      svg.selectAll(\".line\")\n      .data(sumstat)\n      .enter()\n      .append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", function(d){ return color(d.key) })\n        .attr(\"stroke-width\", lineStroke)\n        .attr(\"opacity\", lineOpacity)\n        .attr(\"d\", function(d){\n          return d3.line()\n            .x(function(d) { return x(d.date); })\n            .y(function(d) { return y(+d.delay); })(d.values)\n        })\n        .on(\"mouseover\", function(d,i) {\n          //console.log(i)\n            svg.append(\"text\")\n              .transition()\n              .ease(d3.easeSin)\n              .attr(\"class\", \"title-text\")\n              .style(\"fill\", color(i.key))  \n              .style(\"font-size\", \"22px\")      \n              .text(\"Carrier: \"+i.key)\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"x\", 100)\n              .attr(\"y\", 20);\n            d3.selectAll('.line')\n            .style('opacity', otherLinesOpacityHover);\n            d3.select(this)\n              .style('opacity', lineOpacityHover)\n              .style(\"stroke-width\", lineStrokeHover)\n              .style(\"cursor\", \"pointer\");\n          })\n        .on(\"mouseout\", function() {\n            svg.select(\".title-text\").remove();\n            d3.selectAll(\".line\")\n                .style('opacity', lineOpacity);\n            d3.select(this)\n              .style('opacity', lineOpacity)\n              .style(\"stroke-width\", lineStroke)\n              .style(\"cursor\", \"none\");\n          })\n          ;\n\n        \n      \n        var curtain = svg.append('rect')\n          .attr('x', -1 * width)\n          .attr('y', -1 * height)\n          .attr('height', height)\n          .attr('width', width)\n          .attr('class', 'curtain')\n          .attr('transform', 'rotate(180)')\n          .style('fill', '#ffffff');\n          \n        /* Optionally add a guideline */\n        var guideline = svg.append('line')\n          .attr('stroke', '#333')\n          .attr('stroke-width', 0)\n          .attr('class', 'guide')\n          .attr('x1', 1)\n          .attr('y1', 1)\n          .attr('x2', 1)\n          .attr('y2', height)\n          \n        /* Create a shared transition for anything we're animating */\n        var t = svg.transition()\n          .delay(750)\n          .duration(6000)\n          .ease(d3.easeLinear)\n          .on('end', function() {\n            d3.select('line.guide')\n              .transition()\n              .style('opacity', 0)\n              .remove()\n          });\n        \n        t.select('rect.curtain')\n          .attr('width', 0);\n        t.select('line.guide')\n          .attr('transform', 'translate(' + width + ', 0)')\n\n        d3.select(\"#show_guideline\").on(\"change\", function() {\n          guideline.attr('stroke-width', this.checked ? 1 : 0);\n          curtain.attr(\"opacity\", this.checked ? 0.75 : 1);\n        })                              \n    },\n    buildTreemap() {\n      var width = 960;\n      var height = 960;\n      var margin = {top: 10, right: 10, bottom: 10, left: 10}\n\n      const keys = d3.range(1, 32);\n      console.log(keys)\n      console.log(this.treemapData)\n\n      var data = this.treemapData;\n\n      data.forEach(function(d) { \n        d.name = d.ORIGIN_STATE_NM\n        d.Sat =  +d[\"1\"]\n        d.Sun = +d[\"2\"]\n        d.Mon = +d[\"3\"]\n        d.Tue = +d[\"4\"]\n        d.Wed = +d[\"5\"]\n        d.Thu = +d[\"6\"]\n        d.Fri = +d[\"7\"]\n\n      });\n      console.log(data)\n      \n      const regionByState = new Map(this.region.map(d => [d.State, d.Region]));\n      console.log(regionByState)\n      const divisionByState = new Map(this.region.map(d => [d.State, d.Division]));\n      console.log(divisionByState)\n\n      const group = d3.group(data, d => regionByState.get(d.ORIGIN_STATE_NM), d => divisionByState.get(d.ORIGIN_STATE_NM)) //\n      console.log(group)\n\n      var color = d3.scaleOrdinal(group.keys(), d3.schemeCategory10.map(d => d3.interpolateRgb(d, \"white\")(0.5)))\n      console.log(color)\n    \n\n    var svg = d3.select(\"#treemap\")\n        .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n      console.log(svg)\n\n    var format = d3.format(\",d\");\n\n    var treemap = d3.treemap()\n        .tile(d3.treemapResquarify)\n        .size([width, height])\n        .round(true)\n        .paddingInner(1);\n\n  var root = d3.hierarchy(group)\n      .eachBefore(function(d) { d.data.id = (d.parent ? d.parent.data.id + \".\" : \"\") + d.data.name; })\n      .sum(sumBySat)\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n    console.log(root)\n  treemap(root);\n\n  var cell = svg.selectAll(\"g\")\n    .data(root.leaves())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; });\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) {  return d.data.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .attr(\"fill\", function(d) {return color(d.parent.data[0]); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.data.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#\" + d.data.id; });\n\n  cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.data.id + \")\"; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.data.name.split(/(?=[A-Z][^A-Z])/g)})\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return \"Geographical Division: \" + d.parent.data[0] + \"\\n\" + \"State Name: \" + d.data.name + \"\\n\" + \"Delayed Flight Count: \" +format(d.value); });\n\n  \n  var f_selected = d3.selectAll('input[type=\"radio\"]').node().value;\n  console.log(f_selected)\n  \n  d3.selectAll('input[type=\"radio\"]')\n    .on(\"change\", changed)\n\n  \n  /*\nfunction change_f(){\n    var t = (this.value == \"sumBySat\") ? sumBySat :sumByWed\n    console.log(t);\n    return t\n  }\n  d3.selectAll('input[type=\"radio\"]')\n      .data([sumBySat, sumByWed], function(d) { \n                        return d ? d.name : this.value; })\n      .on(\"change\", changed);*/\n\n  var timeout = d3.timeout(function() {\n    d3.select('input[value=\"sumByWed\"]')\n        .property(\"checked\", true)\n        .dispatch(\"change\");\n  }, 2000);\n\n  \n  function changed() {\n    timeout.stop();\n\n    var t = (this.value == \"sumBySat\") ? sumBySat :sumByWed\n    console.log(t)\n    treemap(root.sum(t));\n\n    cell.transition()\n        .duration(750)\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; })\n      .select(\"rect\")\n        .attr(\"width\", function(d) { return d.x1 - d.x0; })\n        .attr(\"height\", function(d) { return d.y1 - d.y0; });\n  }\n  \n\nfunction sumByWed(d) {\n  return d.Wed;\n}\n\nfunction sumBySat(d) {\n  return d.Sat;\n}\n\n\n    },\n    buildPieChart(){\n\n        var width = 600;\n        var height = 600;\n        var radius = Math.min(width, height) / 2;\n        var donutWidth = 120;\n        var legendRectSize = 15;\n        var legendSpacing = 5;\n\n        var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n        var dataset = this.pieData;\n        \n        dataset.forEach(function(d) {\n            d.count = +d.count;\n          });\n\n        console.log(dataset);\n\n        var svg = d3.select('#pie_chart')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height)\n          .append('g')\n          .attr('transform', 'translate(' + (width / 2) + \n            ',' + (height / 2) + ')');\n\n        var arc = d3.arc()\n          .innerRadius(radius - donutWidth)\n          .outerRadius(radius);\n\n        var pie = d3.pie()\n          .value(function(d) { return d.count; })\n          .sort(null);\n                                 \n\n          var path = svg.selectAll('path')\n            .data(pie(dataset))\n            .enter()\n            .append('path')\n            .attr('d', arc)\n            .attr('fill', function(d) { \n              return color(d.data.label);\n            })\n            .on('mouseover', function(d,i) {                            \n            var total = d3.sum(dataset.map(function(d) {  \n              return d.count;                                           \n            }));                                                          \n            var percent = Math.round(1000 * i.data.count / total) / 10; \n\n            d3.select(this)\n            .attr(\"stroke\", \"#000\")\n\n            svg.append(\"text\")\n            .attr(\"y\", 100)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", 24)\n            .attr(\"class\",\"label\")\n            .style(\"fill\", color(i.data.label))\n            .text(\"Percentage:\" + percent + \"%\");\n\n            svg.append(\"text\")\n            .attr(\"y\", -90)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", 24)\n            .attr(\"class\",\"label2\")\n            .style(\"fill\", color(i.data.label))\n            .text(i.data.label);\n\n          });               \n          \n          path.on('mouseout', function() {                                \n            d3.select(this).attr(\"stroke\", null);  \n            svg.select(\".label\").remove();\n            svg.select(\".label2\").remove();                         \n          });                                                             \n\n        /*\n          path.on('mousemove', function(d) {  \n            tooltip.style('top', (d.pageY + 10) + 'px')          \n              .style('left', (d3.pageX + 10) + 'px');             \n          });      */                                                     \n            \n          var legend = svg.selectAll('.legend')\n            .data(color.domain())\n            .enter()\n            .append('g')\n            .attr('class', 'legend')\n            .attr('transform', function(d, i) {\n              var height = legendRectSize + legendSpacing;\n              var offset =  height * color.domain().length / 2;\n              var horz = -6 * legendRectSize;\n              var vert = i * height - offset;\n              return 'translate(' + horz + ',' + vert + ')';\n            });\n\n          legend.append('rect')\n            .attr('width', legendRectSize)\n            .attr('height', legendRectSize)                                   \n            .style('fill', color)\n            .style('stroke', color);\n            \n          legend.append('text')\n            .attr('x', legendRectSize + legendSpacing)\n            .attr('y', legendRectSize - legendSpacing)\n            .text(function(d) { return d; });\n    }\n\n  },\n  mounted: function () {\n\n    if (!this.$store.state.htmlMapData) {\n      var promises = []\n      promises.push(d3.csv('Data_for_line_chart.csv'))\n      promises.push(d3.csv('us_region.csv'))\n      promises.push(d3.csv('Data_for_treemap.csv'))\n      //promises.push(d3.csv('test_data.json'))\n      promises.push(d3.csv('delay.csv'))\n      Promise.all(promises).then(values => {\n        this.rawData = values\n        this.lineData = values[0]\n        this.region = values[1]\n        this.treemapData = values[2]\n        this.pieData = values[3]\n        this.$store.commit('htmlMapData', this.rawData);\n        this.buildLineChart();\n        this.buildTreemap();\n        this.buildPieChart();\n      })\n    } else {\n      this.rawData = this.$store.state.htmlMapData;\n      this.lineData = this.rawData[0]\n      this.region = this.rawData[1]\n      this.treemapData = this.rawData[2]\n      this.buildLineChart();\n      this.buildTreemap();\n      this.buildPieChart();\n    }\n\n    }\n  }\n\n</script>\n\n<style>\n.title{\n  font-size: 24px;\n\n}\n\n</style>\n\n/*reference:\nOverall:\nhttps://observablehq.com/@hydrosquall/d3-tutorial-interactivity-animated-transitions\n\nLine Plot:\nhttps://www.d3-graph-gallery.com/graph/line_several_group.html\n\nMouseOver:\nhttp://bl.ocks.org/WilliamQLiu/76ae20060e19bf42d774\nhttps://codepen.io/zakariachowdhury/pen/JEmjwq\n\nAnimation:\nhttps://bl.ocks.org/phvaillant/53b90038b9c5ac5f6b817a4f63fbc2af\nhttp://bl.ocks.org/atmccann/8966400\n\n*/"],"sourceRoot":"src/views"}]}